<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>3-shake Engineers' Blogs</title>
        <link>https://blog.3-shake.com</link>
        <description>3-shake に所属するエンジニアのブログ記事をまとめています。</description>
        <lastBuildDate>Tue, 10 Sep 2024 05:19:21 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ja</language>
        <image>
            <title>3-shake Engineers' Blogs</title>
            <url>https://blog.3-shake.com/og.png</url>
            <link>https://blog.3-shake.com</link>
        </image>
        <copyright>3-shake Inc.</copyright>
        <item>
            <title><![CDATA[GKE Observabilityツール – Cloud Service MeshとCiliumの比較]]></title>
            <link>https://sreake.com/blog/cloud-service-mesh-cilium-comparison/</link>
            <guid>https://sreake.com/blog/cloud-service-mesh-cilium-comparison/</guid>
            <pubDate>Mon, 09 Sep 2024 04:55:11 GMT</pubDate>
            <content:encoded><![CDATA[はじめに extended Berkley Packet Filter (eBPF) は、Linuxのカーネルに組み込まれた技術で、カーネルに直接変更を加えることなくプログラムを安全にカーネル内で実行することを可能にしま […]The post GKE Observabilityツール – Cloud Service MeshとCiliumの比較 first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud MonitoringおよびCloud Loggingを用いた監視とアラート通知]]></title>
            <link>https://sreake.com/blog/monitoring-and-alerting-with-cloud-monitoring-and-cloud-logging/</link>
            <guid>https://sreake.com/blog/monitoring-and-alerting-with-cloud-monitoring-and-cloud-logging/</guid>
            <pubDate>Mon, 09 Sep 2024 01:05:46 GMT</pubDate>
            <content:encoded><![CDATA[はじめに はじめまして。Sreake事業部インターン生の高島です。2023年10月から長期インターン生としてKubernetes関連技術の習得とSRE技術の調査・検証を行っています。普段は、情報系の大学院生で、数値解析に […]The post Cloud MonitoringおよびCloud Loggingを用いた監視とアラート通知 first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[生成AIにおけるベクトルインデックス]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/06/234850</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/06/234850</guid>
            <pubDate>Fri, 06 Sep 2024 14:48:50 GMT</pubDate>
            <content:encoded><![CDATA[生成AIにおけるベクトルインデックス：詳細解説ベクトルインデックスとは？ベクトルインデックスは、生成AIにおいて、テキスト、画像、音声などの非構造化データを、数値のベクトルに変換し、そのベクトル間の類似度に基づいて検索や推薦を行うための技術です。なぜベクトルに変換するのか？意味の理解: 単語の並びだけでなく、単語間の関係性や文脈を数値として表現することで、コンピュータがより深くテキストの意味を理解できるようになります。高速な検索: 高次元空間上のベクトル間の距離を計算することで、従来のキーワード検索よりも高速かつ正確に類似したデータを検索できます。多様なデータの統合: テキストだけでなく、画像や音声などもベクトルに変換することで、異なる種類のデータを統一的に扱うことができます。ベクトルインデックスの仕組みベクトル化: テキストや画像などを、ニューラルネットワークなどのモデルを用いて数値のベクトルに変換します。インデックス作成: 変換されたベクトルを、効率的に検索できるようにインデックスを作成します。ベクトル検索: ユーザーのクエリをベクトル化し、作成されたインデックスから最も類似したベクトルを検索します。ベクトルインデックスの活用事例検索エンジン: キーワードだけでなく、文章の意味に基づいたより精度の高い検索を実現します。推薦システム: ユーザーの興味関心に基づいた商品やコンテンツを推薦します。チャットボット: ユーザーの質問に対して、より自然な回答を生成します。画像検索: 画像の内容に基づいた検索や、類似画像の検索を行います。ベクトルインデックスのメリット高精度な検索: キーワードマッチングだけでなく、意味に基づいた検索が可能になります。柔軟なデータ処理: テキストだけでなく、画像や音声など、様々な種類のデータを扱えます。スケーラビリティ: 大量のデータを効率的に処理できます。ベクトルインデックスの課題次元数の呪い: 高次元空間での計算コストが大きくなることがあります。モデルの選択: どのモデルを用いてベクトルに変換するかが、性能に大きく影響します。解釈の難しさ: ベクトル表現が抽象的であり、人間が直感的に理解することが難しい場合があります。今後の展望ベクトルインデックスは、生成AIのさらなる発展に不可欠な技術です。より大規模なデータセットへの対応、より高精度なベクトル化モデルの開発、そして、ベクトル表現の解釈に関する研究が進められていくことが期待されます。具体的な活用事例eコマース: ユーザーの過去の購入履歴や検索履歴に基づいた商品推薦カスタマーサポート: チャットボットによるFAQ検索や、ユーザーの問い合わせに対する自動応答医療: 医療論文の検索や、診断支援金融: リスク評価や不正検知まとめベクトルインデックスは、生成AIの性能を飛躍的に向上させるための重要な技術です。様々な分野での応用が期待されており、今後もその重要性はますます高まっていくでしょう。さらに詳しく知りたい場合は、以下のキーワードで検索してみてください。ベクトルデータベースベクトル検索自然言語処理機械学習ニューラルネットワーク何か他に聞きたいことがあれば、お気軽にご質問ください。より具体的な質問の例:特定のベクトルデータベースについて詳しく知りたいベクトルインデックスを構築する際の注意点ベクトルインデックスを生成AIの開発にどのように活用できるかこれらの質問に対して、より詳細な情報を提供できます。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Run GPU + Ollama gemma2 のパフォーマンスを図ってみる]]></title>
            <link>https://zenn.dev/satohjohn/articles/912b4c718a8d74</link>
            <guid>https://zenn.dev/satohjohn/articles/912b4c718a8d74</guid>
            <pubDate>Fri, 06 Sep 2024 08:31:03 GMT</pubDate>
            <content:encoded><![CDATA[概要Google Cloud 上で申請することで、Cloud Run GPU が使えるようになったので実行してみます。https://cloud.google.com/run/docs/configuring/services/gpu?hl=ja申請フォームGoogle Cloud では以下のように、サンプルが載っているので一旦それの通りの沿って、Gemma2 を起動するアプリケーションを作成します。https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama?hl=jaとはいえ、それだけだとそのまま...]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Operator Days Tokyo 2024 でLLMで運用を改善する時の基本のキを話してきた #CODT2024]]></title>
            <link>https://syu-m-5151.hatenablog.com/entry/2024/09/06/154607</link>
            <guid>https://syu-m-5151.hatenablog.com/entry/2024/09/06/154607</guid>
            <pubDate>Fri, 06 Sep 2024 06:46:07 GMT</pubDate>
            <content:encoded><![CDATA[はじめにこんにちは。今日、Cloud Operator Days 2024 クロージングイベントにて「2024年版 運用者たちのLLM」というタイトルで登壇させていただきました。この記事では、発表の内容と、それに対する反響、そして個人的な振り返りを共有したいと思います。https://cloudopsdays.com/ より引用発表資料 speakerdeck.com発表の概要今回の発表では、LLM（大規模言語モデル）が運用にもたらす可能性と課題について探りました。主に以下のポイントに焦点を当てて議論を展開しました。AIOpsの文脈におけるLLMの位置づけLLMによる運用タスクの改善インシデント対応ドキュメンテーションコード分析LLM活用における課題「幻覚」問題不完全性とバイアス効果的なLLM活用のための戦略適切な利用方法プロンプトエンジニアリングの重要性発表タイトルを「2024年版 運用者たちのLLM」としたのには、理由があります。AIOpsが流行した際に見られた議論が、LLMについても繰り返されているなぁと感じたからです。仕方ないのですが新しい技術が登場するたびに、その可能性と課題について同様の議論が繰り返されます。この観察から、LLMの運用への適用についても、過去の教訓を活かしつつ、冷静に評価することの重要性を強調したいと考えました。技術の進化は確かに速いですが、基本的な課題や考慮すべき点は、意外にも変わらないことが多いのです。そのため、この発表ではLLMの新しい部分を認識しつつも、過去の類似技術の導入事例から学び、より成熟したアプローチで運用に活かす方法を提案することを目指しました。LLMがもたらす可能性LLMは、自然言語処理能力と豊富な知識ベースを活かして、運用の様々な側面を改善する可能性を秘めています。例えば：インシデント対応：過去の類似事例の迅速な検索と解決策の提案ドキュメンテーション：自動生成や更新、整理による効率化コード分析：バグの検出、最適化の提案、セキュリティ脆弱性の指摘これらでは、運用チームの生産性向上と、人間のエラーを減少させることが期待できます。課題と注意点一方で、運用におけるLLMにはいくつかの重要な課題があります。「幻覚」問題：事実と異なる情報を自信を持って提示してしまう不完全性：最新の情報や専門的な知識が不足している可能性バイアス：学習データに含まれるバイアスが出力に反映されるこれらの課題に対処するためには、LLMの出力を常に人間が検証し、適切に管理することが重要です。効果的な活用に向けてLLMを効果的に活用するためには、以下のアプローチが有効です。明確な利用ガイドラインの策定実行能力を奪っておくプロンプトエンジニアリングのスキル向上人間とLLMの協調作業モデルの確立継続的な学習と改善のプロセス導入反響と今後の展望発表後、参加者から興味深いフィードバックをいただきました。特に、LLMの実際の運用現場での活用事例や、課題への具体的な対処法に関する質問が多く寄せられました。これらの反応から、運用におけるLLM活用はまだ発展途上であり、多くの企業や組織、個人がまだまだ試行錯誤の段階にあることがわかりました。今後は、より具体的な事例研究や、ベストプラクティスの共有が求められると感じています。さいごにLLMは確かに素晴らしい技術ですが、万能ではありません。現段階だと人間の専門知識や判断力と組み合わせることで、初めてその真価を発揮します。今後も、LLMと運用の関係性について研究を続け、自動化の楽しさを紹介していきたいと考えています(ﾎﾝﾏか??)。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2024年版 運用者たちのLLM]]></title>
            <link>https://speakerdeck.com/nwiizo/2024nian-ban-yun-yong-zhe-tatinollm</link>
            <guid>https://speakerdeck.com/nwiizo/2024nian-ban-yun-yong-zhe-tatinollm</guid>
            <pubDate>Fri, 06 Sep 2024 04:00:00 GMT</pubDate>
            <content:encoded><![CDATA[Cloud Operator Days 2024 クロージングイベントhttps://cloudopsdays.com/closing/この発表資料は、LLM（大規模言語モデル）によるIT運用の可能性と課題を探っています。AIOpsの概念を基に、LLMがインシデント対応、ドキュメンテーション、コード分析などの運用タスクをどのように改善できるかを説明しています。同時に、LLMの「幻覚」や不完全性といった課題も指摘し、適切な利用方法やプロンプトエンジニアリングの重要性を強調しています。登壇時ブログhttps://syu-m-5151.hatenablog.com/entry/2024/09/06/154607]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Google Cloud Gemini向けの生成AIのプロンプトエンジニアリング]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/05/235035</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/05/235035</guid>
            <pubDate>Thu, 05 Sep 2024 14:50:35 GMT</pubDate>
            <content:encoded><![CDATA[cloud.google.com生成AIのプロンプトエンジニアリングは様々な手法がありますが、Gemini for Google Cloudなんて出ているのですね。Google Cloud のプロダクトとサービスに関しては、Geminiは学習済のようで、詳しいようです。読んで勉強したいと思います。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mini-Omni OSSでSpeech-to-Speechができるようになる？]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/04/233919</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/04/233919</guid>
            <pubDate>Wed, 04 Sep 2024 14:39:19 GMT</pubDate>
            <content:encoded><![CDATA[arxiv.orgGPT-4oの進化系で、リアルタイム音声会話のできる生成AIがOSSで出たようです。github.comその名もMini-Omni。小型モデルでどうリアルタイム音声会話を実現したのか興味深いですね。生成AIでリアルタイム音声会話は難しく、Speech-to-Text-to-Speechという変換手順を踏む必要があり、時間がかかっていたところ、リアルタイム、つまりSpeech-to-Speechで早く処理できるようになった、ということですね。ぜひ論文を読んでみたいと思います。以下、AbstractをGeminiで訳してみました。（OpenAIちゃうんかいw）言語モデルの進歩とMini-Omni言語モデルの最近の進歩は、大きな成果を上げています。GPT-4oは新たなマイルストーンとして、人間とのリアルタイム会話が可能となり、人間に近い自然な流暢さを示しています。このような人間とコンピュータのインタラクションを実現するには、音声モダリティで直接推論を行い、ストリーミングで出力生成できるモデルが必要となります。しかし、これは現在の学術的なモデルではまだ実現できていません。これらのモデルは通常、音声合成のために追加のTTSシステムに依存しており、望ましくない遅延が生じます。本論文では、リアルタイム音声インタラクションが可能なオーディオベースのエンドツーエンド会話モデルであるMini-Omniを紹介します。この機能を実現するために、テキスト指示による音声生成方法と、推論時のバッチ並列戦略を提案しています。この手法は、元のモデルの言語能力を最小限の劣化で保持するのに役立ち、他の研究がリアルタイムインタラクション機能を確立できるようにします。このトレーニング方法を「Any Model Can Talk」と呼んでいます。また、音声出力を最適化したモデルをファインチューニングするためのVoiceAssistant-400Kデータセットも紹介します。私たちの知る限り、Mini-Omniはリアルタイム音声インタラクションのための最初の完全なエンドツーエンド、オープンソースモデルであり、今後の研究に貴重な可能性を提供します。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Google Cloudの生成AIサンプルアプリEnterprise Knowledge Solution (EKS)]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/03/235705</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/03/235705</guid>
            <pubDate>Tue, 03 Sep 2024 14:57:05 GMT</pubDate>
            <content:encoded><![CDATA[github.comGoogle Cloudの生成AIサンプルアプリ「Enterprise Knowledge Solution」 (EKS)がGitHubで公開されています。EKSはAmazon Elastic Kubernetes Serviceと紛らわしい（苦笑）「Enterprise Knowledge Solution」 はIAPとCloud RunベースでUI付きの生成AIアプリケーションをさっとデプロイできるようです。私はまだ試せていないですが、是非とも触ってみたいですね。terraformでデプロイできる模様。これは面白そう。コードも参考になりそうですね。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Github Actions で見る tfsec と Trivy の今 ~ Terraform 静的解析]]></title>
            <link>https://zenn.dev/yokoo_an209/articles/trivy-for-terraform</link>
            <guid>https://zenn.dev/yokoo_an209/articles/trivy-for-terraform</guid>
            <pubDate>Tue, 03 Sep 2024 14:17:49 GMT</pubDate>
            <content:encoded><![CDATA[Github Actionsでtfsecを実装する際に、以下を発見して良いなと思ったので試してみたhttps://tech.crassone.jp/posts/how_tfsec-pr-commenter-action_was_introduced_to_significantly_reduce_the_execution_time_of_terraform_security_scans# https://aquasecurity.github.io/tfsec/v1.0.11/getting-started/configuration/github-actions/pr-comme...]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Github ActionsでCross ProjectのDirect Workload Identity Federationを試す]]></title>
            <link>https://zenn.dev/yokoo_an209/articles/direct-workloadidentity-federation</link>
            <guid>https://zenn.dev/yokoo_an209/articles/direct-workloadidentity-federation</guid>
            <pubDate>Tue, 03 Sep 2024 02:12:47 GMT</pubDate>
            <content:encoded><![CDATA[はじめに現在、Workload Identity Federation の認証は以下2種類があります。Direct Workload Identity Federation（推奨、本記事の内容）Workload Identity Federation through a Service Account（従来の方法）今回は、Github Actions上で、Direct Workload Identity Federation を使用して Google Cloud の Cross Project（プロジェクトをまたぎ）でのアクセスが可能か検証します。 Direct ...]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LangChain Meetup Tokyo #2に登壇し、LangChainでWebサイトの内容取得やGitHubソースコード取得、というタイトルで発表しました]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/02/224106</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/02/224106</guid>
            <pubDate>Mon, 02 Sep 2024 13:41:06 GMT</pubDate>
            <content:encoded><![CDATA[langchain.connpass.comLangChain Meetup Tokyo #2に登壇してきました。私は「LangChainでWebサイトの内容取得やGitHubソースコード取得」というタイトルで発表しました！次は @shu_kob によるLangChainでWebサイトの内容取得やGitHubソースコード取得👏 #LangChainJP pic.twitter.com/ryvFxqv6M1— こぎそ | Algomatic (@kgsi) 2024年9月2日   写真撮っていただけてました。ありがとうございます。ChatGPT/LangChainによるチャットシステム構築［実践］入門作者:吉田 真吾,大嶋 勇樹技術評論社Amazon「ChatGPT/LangChainによるチャットシステム構築［実践］入門」の著者、吉田 真吾さん、大嶋 勇樹さんにもお会いできました。お二人の会社、株式会社ジェネラティブエージェンツのCEO西見公宏さんにもお会いでき、コロッケそばさん、技術者としてステキ‼️ #langchainjp pic.twitter.com/N1GE4ArjJ0— 𝙎𝙝𝙞𝙣𝙜𝙤 吉田真吾 (@yoshidashingo) 2024年9月2日   65歳で登壇されたコロッケそばさんかっこよかったです！ speakerdeck.com↑私の資料はこちらにアップロードしています。様々な学びがあり、もっと生成AIを頑張ろう、と思えた刺激的なMeetupでした！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LangChainでWebサイトの内容取得やGitHubソースコード取得]]></title>
            <link>https://speakerdeck.com/shukob/langchaindewebsaitononei-rong-qu-de-yagithubsosukodoqu-de</link>
            <guid>https://speakerdeck.com/shukob/langchaindewebsaitononei-rong-qu-de-yagithubsosukodoqu-de</guid>
            <pubDate>Mon, 02 Sep 2024 04:00:00 GMT</pubDate>
            <content:encoded><![CDATA[https://langchain.connpass.com/event/329185/LangChainでは、Webサイトの内容取得やGitHubソースコード取得もできます。使用してみた所感も交えてこれらの機能のご紹介をします。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Project IDX での Web アプリケーション開発]]></title>
            <link>https://zenn.dev/satohjohn/articles/4e7a1e5e3140e1</link>
            <guid>https://zenn.dev/satohjohn/articles/4e7a1e5e3140e1</guid>
            <pubDate>Mon, 02 Sep 2024 03:41:10 GMT</pubDate>
            <content:encoded><![CDATA[概要Project IDX (以下 IDX) は Google Cloud の Cloud Workstations をベースに Google がホストする仮想実装環境を提供してくれるサービスになります。https://idx.dev/PWA 対応しているため、install して利用することが可能です。（私は、 https://open-vsx.org/extension/k--kato/intellij-idea-keybindings こちらの extensions を利用しているため keybind を考えると install したほうが扱いやすいというのがあります)...]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LangChainでgithubリポジトリのソースコードを読む方法]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/09/01/235529</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/09/01/235529</guid>
            <pubDate>Sun, 01 Sep 2024 14:55:29 GMT</pubDate>
            <content:encoded><![CDATA[shu-kob.hateblo.jp昨日の記事に関連して、今回はLangChainでgithubリポジトリのソースコードを読む方法です。github.com↑サンプルソースコードを載せています。js.langchain.com↑使い方はこちら実行例npx ts-node githubLoader.ts https://github.com/shu-kob/langchain-sample-codeDocument {  pageContent: "import { CheerioWebBaseLoader } from '@langchain/community/document_loaders/web/cheerio'\n" +    "import { RecursiveCharacterTextSplitter } from '@langchain/textsplitters'\n" +    "import { HtmlToTextTransformer } from '@langchain/community/document_transformers/html_to_text'\n" +    '\n' +    'const url = process.argv[2]\n' +    '\n' +    'async function webLoad (url: string) {\n' +    '  const loader = new CheerioWebBaseLoader(url)\n' +    '  const docs = await loader.load()\n' +    "  const splitter = RecursiveCharacterTextSplitter.fromLanguage('html')\n" +    '  const transformer = new HtmlToTextTransformer()\n' +    '  const sequence = splitter.pipe(transformer)\n' +    '  const newDocuments = await sequence.invoke(docs)\n' +    "  console.log('newDocuments:')\n" +    '  console.log(newDocuments)\n' +    '}\n' +    '\n' +    'webLoad(url)\n',  metadata: {    source: 'cheerioWebBaseLoader.ts',    repository: 'https://github.com/shu-kob/langchain-sample-code',    branch: 'main'  },  id: undefined}Document {  pageContent: "import { GithubRepoLoader } from '@langchain/community/document_loaders/web/github'\n" +    '\n' +    'const url = process.argv[2]\n' +    '\n' +    'async function readSorceCodesFromGithub(url: string) {\n' +    '\n' +    '  const loader = new GithubRepoLoader(\n' +    '    url,\n' +    '    {\n' +    '      branch: "main", // Defaultブランチが "master" でないか注意。他のブランチも選択可能\n' +    '      recursive: true,\n' +    '      processSubmodules: true,\n' +    '      unknown: "warn",\n' +    '      maxConcurrency: 5, // Defaults to 2\n' +    '      ignorePaths: ["*.json", "*.yaml", "*.yml", "*config*", "*.md", "Dockerfile", "*ignore", ".eslintrc.js", "*.svg"] // 除外するファイルパス\n' +    '    }\n' +    '  );\n' +    '\n' +    '  for await (const doc of loader.loadAsStream()) {\n' +    '    console.log(doc)\n' +    '  }\n' +    '};\n' +    '\n' +    'readSorceCodesFromGithub(url)\n',  metadata: {    source: 'githubLoader.ts',    repository: 'https://github.com/shu-kob/langchain-sample-code',    branch: 'main'  },  id: undefined}Document {  pageContent: "import * as cheerio from 'cheerio'\n" +    '\n' +    'const url = process.argv[2]\n' +    '\n' +    'async function webLoad (url: string) {\n' +    '  // HTMLの取得\n' +    '  const response = await fetch(url)\n' +    '  const htmlText = await response.text()\n' +    '  const cheerioText = cheerio.load(htmlText)\n' +    '\n' +    '  // styleとscriptを除去\n' +    "  cheerioText('style').remove()\n" +    "  cheerioText('script').remove()\n" +    '\n' +    "  const bodyContent: string = cheerioText('body').text().replace(/\\s+/g, '')\n" +    '\n' +    "  console.log('bodyContent:')\n" +    '  console.log(bodyContent)\n' +    '  return bodyContent\n' +    '}\n' +    '\n' +    'webLoad(url)\n',  metadata: {    source: 'webLoad.ts',    repository: 'https://github.com/shu-kob/langchain-sample-code',    branch: 'main'  },  id: undefined}これらのソースコードをプロンプトに含めて、生成AIに投げます。例えば、GitHubリポジトリの仕様を聞くなどです。多くの場合、ソースコードの文量は多くなり、それなりのトークン数になるので、200万トークン対応のGemini-1.5などを使うのが良いでしょう。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LangChainでURLからWebページの中身を読み込む方法]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/31/223416</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/31/223416</guid>
            <pubDate>Sat, 31 Aug 2024 13:34:16 GMT</pubDate>
            <content:encoded><![CDATA[langchain.connpass.com今度、Langchain Meetup Tokyoで喋るので、「LangChainでURLからWebページの中身を読み込む方法」を準備中github.com↑ソースコードを上げておきました。npx ts-node cheerioWebBaseLoader.ts https://shu-kob.hateblo.jp/entry/2024/08/29/234143という形で実行し、以下の結果が得られます。newDocuments:[  Document {    pageContent: 'Toilを無くして徒然なるままに日暮し硯に向かひたい 読者になる Toilを無くして徒然なるままに日暮し硯に向かひたい\n' +      '生成AIアプリケーション開発などを行うエンジニアのブログです。 2024-08-29 オライリーのAWS生成AI本 AWSではじめる生成AI\n' +      '―RAGアプリケーション開発から、基盤モデルの微調整、マルチモーダルAI活用までを試して学ぶ作者:Chris Fregly,Antje\n' +      'Barth,Shelbee EigenbrodeオライリージャパンAmazon そういや、オライリージャパンからAWSの生成AI本出てますね。\n' +      '欲しいと思いながらも買うてない。 現状、自身の仕事のほとんどはGoogle cloudなので、AWS書籍どうしようかと思ってますが、\n' +      '面白そうなら買うてみるしか！ 翻訳はAWS Japanの久富木 隆一さん。 AWSの中の人が翻訳しているので確かでしょうね！ shu-kob\n' +      '2024-08-29 23:41 読者になる',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: 'shu-kob 2024-08-29 23:41 読者になる 広告を非表示にする 関連記事 2024-08-04 日本生成AIユーザ会\n' +      'Geminiマルチモーダルプログラミング（ハンズオン）を2024年8月13日(… genai-users.connpass.com\n' +      'このブログで何回か書いておりますが… 2024-07-20 Google Gemini 1.5／LlamaIndex／LangChain\n' +      '人工知能プログラミング… 2024年7月15日に Googleの生成AIモデル Gemini1.5 に対応した技…',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: '1.5／LlamaIndex／LangChain 人工知能プログラミング… 2024年7月15日に Googleの生成AIモデル Gemini1.5\n' +      'に対応した技… 2024-06-07 Google Cloud Vertex AI Agent Builderの使い方\n' +      'RAG(Retrieval-Augmented Generation) RAG（Retrieval Augmente… 2024-04-05\n' +      '生成AIアプリケーション開発入門ハンズオン genai-users.connpass.com この記事は、日本生成AIユーザ会 #1 … 2023-12-17\n' +      '生成AIについて学んだのでざっとアウトプット はじめに 3-shake Advent Calendar 2023シリーズ1、17日目の記… もっと読む',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: '生成AIについて学んだのでざっとアウトプット はじめに 3-shake Advent Calendar 2023シリーズ1、17日目の記… もっと読む\n' +      'コメントを書く « SRETT#10 ~ 夏のSRE祭り！アーカイブ動画… 「SREをはじめよう」(Becoming SRE邦訳)が… » プロフィール\n' +      'id:shu-kob 読者です 読者をやめる 読者になる 読者になる このブログについて 検索 リンク はてなブログ ブログをはじめる',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: 'このブログについて 検索 リンク はてなブログ ブログをはじめる 週刊はてなブログ はてなブログPro 最新記事 SRETT#10 ~\n' +      '夏のSRE祭り！アーカイブ動画公開！ オライリーのAWS生成AI本 「SREをはじめよう」(Becoming SRE邦訳)が出版 Google Cloud\n' +      'エンジニアおよび Google Cloud パートナー2社による生成AI利活用を進めるためのプロセス',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: 'Google Cloud エンジニアおよび Google Cloud パートナー2社による生成AI利活用を進めるためのプロセス\n' +      '後継者不足のCOBOLを生成AIに引き継ぎ 月別アーカイブ ▼ ▶ 2024 2024 / 8 2024 / 7 2024 / 6 2024 / 5',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: '2024 / 6 2024 / 5 2024 / 4 2024 / 3 2024 / 2 ▼ ▶ 2023 2023 / 12',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: '2023 / 12 はてなブログをはじめよう！ shu-kobさんは、はてなブログを使っています。あなたもはてなブログをはじめてみませんか？\n' +      'はてなブログをはじめる（無料） はてなブログとは Toilを無くして徒然なるままに日暮し硯に向かひたい Powered by Hatena Blog |\n' +      "ブログを報告する if (typeof window.Hatena === 'undefined') { window.Hatena = {}; } if\n" +      "(!Hatena.hasOwnProperty('Star')) { Hatena.Star = { VERSION: 2, }; } (function(d,\n" +      's, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id))\n' +      'return; js = d.createElement(s); js.id = id; js.src =',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  },  Document {    pageContent: 'VERSION: 2, }; } (function(d, s, id) { var js, fjs =\n' +      'd.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js =\n' +      'd.createElement(s); js.id = id; js.src =\n' +      '"//connect.facebook.net/ja_JP/sdk.js#xfbml=1&appId=719729204785177&version=v17.0";\n' +      "fjs.parentNode.insertBefore(js, fjs); }(document, 'script', 'facebook-jssdk'));\n" +      '引用をストックしました ストック一覧を見る 閉じる 引用するにはまずログインしてください ログイン 閉じる 引用をストックできませんでした。再度お試しください\n' +      '閉じる 限定公開記事のため引用できません。\n' +      '\n' +      '読者です 読者をやめる 読者になる 読者になる Hatena.Diary.GlobalHeader.init()',    metadata: {      source: 'https://shu-kob.hateblo.jp/entry/2024/08/29/234143',      loc: [Object]    },    id: undefined  }]npx  ts-node cheerioWebBaseLoader.ts https://www.gyomusuper.jp/ただし、例えば業務スーパーのホームページを読んだ際、余計なコードが多い。newDocuments:[  Document {    pageContent: "$(function() { $('.sale_bnr_close').on('click', function() {\n" +      "$('.sale_bnr').css('display', 'none'); }); }); /*onlineshopメニュー*/ .menu_ec:hover\n" +      '{ background:url("./img/menu_ec_on.png") no-repeat left center #FFF; transition:\n' +      'all .5s; } /*Gyomucaメニュー*/ .menu_gyomuca { display: inline-block; width: 260px;\n' +      'height: 44px; text-align: center; text-decoration: none; line-height: 44px;\n' +      'outline: none; background:url("./img/menu_gyomuca.png") no-repeat left center;\n' +      'text-indent:100%; white-space:nowrap; overflow:hidden; } .menu_gyomuca:hover {\n' +      'background:url("./img/menu_gyomuca_on.png") no-repeat left center #FFF;\n' +      'transition: all .5s; } /*ここまで*/ .menu_gyomuca_on\n' +      '{background:url("./img/menu_gyomuca_on.png") no-repeat left center\n' +      '#FFF;text-indent:100%;white-space:nowrap;overflow:hidden;display:\n' +      'inline-block;width: 260px;height: 44px;line-height: 44px;}',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'left center #FFF;text-indent:100%;white-space:nowrap;overflow:hidden;display:\n' +      'inline-block;width: 260px;height: 44px;line-height: 44px;}\n' +      'お問い合わせ　｜　会社案内　｜　サイトポリシー　｜　個人情報の保護に関する基本方針 ホーム 商品紹介 ミラクルレシピ 特集一覧 安心安全の取り組み\n' +      '業務スーパーとは Gyomuca お問い合わせ オンラインショップ FC加盟店募集 会社案内 日本語 / ENGLISH / 中文 .fc_com_link {\n' +      'display: flex; margin-left: 40px; margin-top: 5px; } #side_menu ul.fc_com_link\n' +      'li { width: auto; height: auto; } #side_menu ul.fc_com_link li:nth-of-type(1) {\n' +      'margin-right: 10px; } #side_menu ul.fc_com_link li a { position: relative;',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'height: auto; } #side_menu ul.fc_com_link li:nth-of-type(1) { margin-right:\n' +      '10px; } #side_menu ul.fc_com_link li a { position: relative; font-size: 12px;\n' +      'color: #fff; font-weight: bold; text-shadow: 0px 0px 0.1px #fff; letter-spacing:\n' +      '1px; padding:5px; } #side_menu ul.fc_com_link li a span { content: ""; display:\n' +      'inline-block; width: 0; height: 0; border-style: solid; border-width: 5px 0 5px\n' +      '8.7px; border-color: transparent transparent transparent #ffffff; padding-right:\n' +      '8px; } #side_menu ul.fc_com_link li a:hover { background-color: #fff; color:\n' +      '#00a55a; text-decoration: none; transition: all .5s; } #side_menu ul.fc_com_link\n' +      'li a:hover span { border-color: transparent transparent transparent',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '#00a55a; text-decoration: none; transition: all .5s; } #side_menu ul.fc_com_link\n' +      'li a:hover span { border-color: transparent transparent transparent #00a55a;\n' +      'transition: all .5s; } /*FCページの時*/ #side_menu ul.fc_com_link li a.menu_fc2_on {\n' +      'background-color: #fff; color: #00a55a; text-decoration: none; text-shadow: 0px\n' +      '0px 0.1px #00a55a; } #side_menu ul.fc_com_link li a.menu_fc2_on span {\n' +      'border-color: transparent transparent transparent #00a55a; } /*ここまで*/ .lang_box\n' +      '{ margin-left: 42px; display: flex; } .lang_box span:nth-child(n + 2) {\n' +      'margin-left: 8px; } .social_box { margin-left: 38px; display: flex; margin-top:\n' +      '20px; padding-left: 5px; } .social_box p img { width: 100%; } .social_box',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '{ margin-left: 38px; display: flex; margin-top: 20px; padding-left: 5px; }\n' +      '.social_box p img { width: 100%; } .social_box p:nth-of-type(1) { margin-right:\n' +      '18px; } .social_box p { width: 35px; } @media screen and (min-width: 1024px) {\n' +      '#side_menu .social_box { padding-bottom: 80px; } } // 指定日時を超えたらセールスライド・バナー非表示\n' +      "var now = new Date(); var end = new Date('2024/10/31 23:59:59');\n" +      "//（指定日時　時間は24h表記） if ( now > end ) { $('.sale_slide_top').remove();\n" +      "$('.sale_bnr').remove(); }else{ // 保持時間を設定 30分後を取得 var min = new Date();\n" +      'min.setTime( min.getTime() + ( 30 * 60 * 1000 )); console.log(min);\n' +      `$('.sale_bnr').css('display','block'); $.cookie("sale_bnr") ==`,    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'var min = new Date(); min.setTime( min.getTime() + ( 30 * 60 * 1000 ));\n' +      `console.log(min); $('.sale_bnr').css('display','block'); $.cookie("sale_bnr") ==\n` +      `'on'?$('.sale_bnr').hide():$('.sale_bnr').show(); $.cookie("sale_bnr",'on',{\n` +      "expires: min , path: '/' }); } // 指定日時を超えたらセールスライド・バナー非表示 var now = new Date();\n" +      "var end = new Date('2024/8/31 23:59:59'); //（指定日時　時間は24h表記） if ( now > end ) {\n" +      "$('.sale_bnr_img img').attr('src','img/main_sale20240901.png'); }\n" +      "$(window).on('load', function(){ $('#bakudan').attr('data-lightbox','info01');\n" +      '}); // 指定日時を超えたらセールスライド・バナー非表示 var now = new Date(); var end = new\n' +      "Date('2024/8/31 23:59:59'); //（指定日時　時間は24h表記） if ( now > end ) {\n" +      "$('.bakudan_slide').remove(); $('.sale_alide",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "指定日時を超えたらセールスライド・バナー非表示 var now = new Date(); var end = new Date('2024/8/31\n" +      "23:59:59'); //（指定日時　時間は24h表記） if ( now > end ) { $('.bakudan_slide').remove();\n" +      "$('.sale_alide img').attr('src','img/main_sale20240901.png'); } NEW ITEM 新着商品 新着\n" +      'ホット＆スパイシーヌードル\n' +      'ホットでスパイシーなインスタントヌードルです。スパイスをきかせたスープは、ピリッとした辛さの中にも旨みがあり、クセになります！熱湯をかけて粉末スープと調味オイルを加えるだけの簡単調理も魅力。鍋で煮込んでお好みの具材や、ご飯を入るアレンジもおすすめです。5袋入り。\n' +      '詳しくはこちら 詳しくはこちら PICK UP!おすすめ商品 商品をもっと見る 新着 パルメザンチーズのリゾット\n' +      'イタリアの米料理の定番！リゾットです。パルメザンチーズのコクと旨味がたっぷり詰まった濃厚な味わい♪チーズがお好きな方におすすめのレシピです。おうちでお手軽にイタリアンをお楽しみください！\n' +      '詳しくはこちら',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'パルメザンチーズのリゾット\n' +      'イタリアの米料理の定番！リゾットです。パルメザンチーズのコクと旨味がたっぷり詰まった濃厚な味わい♪チーズがお好きな方におすすめのレシピです。おうちでお手軽にイタリアンをお楽しみください！\n' +      '詳しくはこちら パルメザンチーズ[要冷蔵] 詳しくはこちら PICK UP!おすすめレシピ レシピをもっと見る SPECIAL TOPICS 特集\n' +      '特集をもっと見る SNS 公式Instagram・公式X（旧Twitter） Tweets',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'Tweets by GyomusuperOFCL 公式Instagram 公式X（旧Twitter）',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '公式Instagram 公式X（旧Twitter）\n' +      '2024年8月30日台風10号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風10号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業状況につきましては、台風10号の影響による営業に関するお知らせをご確認ください。※最新の情報に関しましては、ご利用の店舗に直接お問い合わせください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。2024年8月19日フジテレビ「めざましテレビ」で紹介されました2024年8月16日（金）放送のフジテレビ「めざましテレビ」で、業務スーパーの商品が紹介されました。放送局：フジテレビ番組名：「めざましテレビ」放送日：2024年8月16日（金）めざましテレビ2024年8月16日台風7号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風7号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業状況につきましては、台風7号の影響による営業に関するお知らせをご確認ください。※最新の情報に関しましては、ご利用の店舗に直接お問い合わせください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。2024年8月15日【セール情報】9月1日（日）から「お買い得まみれ!!総力祭\n' +      '日頃のご愛顧感謝セール」START！いつも業務スーパーをご愛顧いただきありがとうございます！9月1日（日）から10月31日（木）までの2か月間、感謝の気持ちをたっぷり込めた「お買い得まみれ!!総力祭',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '日頃のご愛顧感謝セール」START！いつも業務スーパーをご愛顧いただきありがとうございます！9月1日（日）から10月31日（木）までの2か月間、感謝の気持ちをたっぷり込めた「お買い得まみれ!!総力祭\n' +      '日頃のご愛顧感謝セール」を開催いたします。国内関連工場のオリジナル商品や海外直輸入商品など、とにかくお得なアイテム盛りだくさん！全国の業務スーパーで皆さまのご来店を心よりお待ちしております。<セール期間>【第1弾】2024年9月1日（日）～9月30日（月）【第2弾】2024年10月1日（火）～10月31日（木）<セール対象店舗>全国の業務スーパー各店（※一部店舗を除く）セール特設ページはこちら2024年8月12日台風5号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風5号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業時間や休業のご確認につきましては、台風5号の影響による営業に関するお知らせをご確認ください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。\n' +      '一覧を見る 『世界の本物』を直輸入！\n' +      '業務スーパーには、世界の国々で現地の人々に愛されている『世界の本物』が盛りだくさん！めずらしいものから日本でもなじみのあるものまで、厳選したアイテムを、高品質＆ロープライスで取りそろえています！\n' +      '安さの秘密 自慢の国内自社工場の『オリジナル』\n' +      '国内の自社工場で、さまざまな「食」のニーズに応える、オリジナル商品をつくっています！ユニークな商品から日々の食卓に欠かせない商品までバラエティ豊かに低価格で取りそろえています！\n' +      '安全・安心の秘密',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '自慢の国内自社工場の『オリジナル』\n' +      '国内の自社工場で、さまざまな「食」のニーズに応える、オリジナル商品をつくっています！ユニークな商品から日々の食卓に欠かせない商品までバラエティ豊かに低価格で取りそろえています！\n' +      '安全・安心の秘密\n' +      'スポーツには不思議なチカラがあります。こども達の心や体を強くするとともに、アスリート達の真摯な姿は多くの人々に笑顔と感動を与え、夢に向かって挑戦することの大切さを教えてくれます。\n' +      '神戸物産はヴィッセル神戸、横浜DeNAベイスターズ、神戸ストークスのオフィシャルスポンサーとして地域スポーツの発展を支援し、人々のくらしを応援します。\n' +      '.detail_footer{display: none;} @media screen and (max-width: 767px){\n' +      '.detail_footer{ display: block; position: fixed; bottom: 0; width: 100%;\n' +      'z-index: 20; } .detail_footer_con{ display: flex; justify-content: space-around;\n' +      'align-items: flex-start; max-width: 400px; width: 97%; margin: 0 auto; }\n' +      '.detail_footer_con a{ text-decoration: none; color: #fff; } .footer_btn{\n' +      'background-color: #13a555; padding: 10px; border-radius: 10px 10px 0 0; width:\n' +      '32%; font-size: 11px; color: #fff; display: flex; flex-direction: column;',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: '#13a555; padding: 10px; border-radius: 10px 10px 0 0; width: 32%; font-size:\n' +      '11px; color: #fff; display: flex; flex-direction: column; justify-content:\n' +      'center; align-items: center; height: 55px; } .footer_btn p{ margin: 0; }\n' +      '.footer_btn img{ margin-bottom: 5px; } .shop_img{ width: 24%; } .bargain_img{\n' +      'width: 23%; } .pro_img{ width: 21%; } .to_img{ width: 22%; } .re_img{ width:\n' +      '25%; } .footer_x, .footer_insta{ width: 13%; border-radius: 40px; } .footer_x{\n' +      'background-color: #000; padding: 13px; } .footer_insta{ background-color:\n' +      '#ff0069; padding: 12px; } .footer_btn, .footer_x, .footer_insta{ box-shadow: 1px\n' +      '1px 4px 0 rgba(0, 0, 0, .5); } } 店舗検索 特売情報 ホーム WEBチラシ 店舗案内 ミラクルレシピ 商品紹介 直輸入商品\n' +      '国内自社工場商品 業務スーパーとは 安さの秘密 安全安心の取り組み',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: 'ホーム WEBチラシ 店舗案内 ミラクルレシピ 商品紹介 直輸入商品 国内自社工場商品 業務スーパーとは 安さの秘密 安全安心の取り組み 商品開発事前チェック\n' +      '現地工場チェック 品質安全検査 商品検証 FC加盟店募集 業務スーパー5つの強み 業務スーパーの特徴 オープンまでのプロセス 体制について 契約概要・加盟条件\n' +      '物件・商品のご提案募集 お問い合わせ　｜　会社案内　｜　サイトポリシー　｜　個人情報の保護に関する基本方針\n' +      '〒675-0063兵庫県加古川市加古川町平野125番1 ©2018-document.write(new Date().getFullYear());\n' +      'Gyomu Super All Rights Reserved. footer small { display: block; text-align:\n' +      'right; padding-right: 10px; margin: 0 3%; color: #fff; } @media (max-width:64em)\n' +      '{ footer small { display: block; text-align: left; padding-right: 10px; margin:\n' +      "20px 4%!important; color: #fff; } } $('.main_img\n" +      ".swiper-slide').click(function(){ var top_slide =\n" +      "$(this).children('a').attr('href'); gtag('event', 'click', {'event_category' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "20px 4%!important; color: #fff; } } $('.main_img\n" +      ".swiper-slide').click(function(){ var top_slide =\n" +      "$(this).children('a').attr('href'); gtag('event', 'click', {'event_category' :\n" +      "'top_slide', 'event_label' : 'top_slide_'+top_slide+''}); gtag('event',\n" +      "'top_slide', {'top_slide' : top_slide}); }); $('.topics').click(function() { var\n" +      "page_url = $('.topics a').attr('href'); gtag('event', 'click', {'event_category'\n" +      ": 'topics_bnr', 'event_label' : 'topics_bnr_'+page_url+''}); gtag('event',\n" +      "'topics_bnr', {'topics_bnr' : page_url}); });\n" +      "$('.top_recipe_bnr').click(function(){ var top_recipe_bnr = $('.top_recipe_bnr\n" +      "a').attr('href'); gtag('event', 'click', {'event_category' : 'top_recipe_bnr',\n" +      "'event_label' : 'top_recipe_bnr_'+top_recipe_bnr+''}); gtag('event',\n" +      "'top_recipe_bnr', {'top_recipe_bnr' : top_recipe_bnr}); });\n" +      "$('.gs_forum').click(function(){ var gs_forum = $('.gs_forum .forumimg\n" +      "img').attr('src'); gtag('event', 'click',",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "gtag('event', 'top_recipe_bnr', {'top_recipe_bnr' : top_recipe_bnr}); });\n" +      "$('.gs_forum').click(function(){ var gs_forum = $('.gs_forum .forumimg\n" +      "img').attr('src'); gtag('event', 'click', {'event_category' : 'gs_forum',\n" +      "'event_label' : 'gs_forum_'+gs_forum+''}); gtag('event', 'gs_forum', {'gs_forum'\n" +      ": gs_forum}); }); $('.information dt').click(function(){ var news_title =\n" +      "$(this).children('p').text(); gtag('event', 'click', {'event_category' : 'news',\n" +      "'event_label' : 'news_'+news_title+''}); gtag('event', 'news', {'news' :\n" +      "news_title}); }); $('.yasusa').click(function(){ gtag('event', 'click',\n" +      "{'event_category' : 'yasusa_himitsu', 'event_label' : 'yasusa_himitsu'});\n" +      "gtag('event', 'yasusa_himitsu', {'yasusa_himitsu' : 'yasusa_himitsu'}); });\n" +      "$('.anzen').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'anzen_himitsu', 'event_label' : 'anzen_himitsu'}); gtag('event',\n" +      "'anzen_himitsu', {'anzen_himitsu' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "gtag('event', 'click', {'event_category' : 'anzen_himitsu', 'event_label' :\n" +      "'anzen_himitsu'}); gtag('event', 'anzen_himitsu', {'anzen_himitsu' :\n" +      "'anzen_himitsu'}); }); $('.recipe_btm_link').click(function(){ gtag('event',\n" +      "'click', {'event_category' : 'recipe_btm_link', 'event_label' :\n" +      "'recipe_btm_link'}); gtag('event', 'recipe_btm_link', {'recipe_btm_link' :\n" +      "'recipe_btm_link'}); }); $('.3step_btn').click(function(){ gtag('event',\n" +      "'click', {'event_category' : '3step_btn', 'event_label' : '3step_btn'});\n" +      "gtag('event', '3step_btn', {'3step_btn' : '3step_btn'}); });\n" +      "$('.setsuyaku_btn').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'setsuyaku_btn', 'event_label' : 'setsuyaku_btn'}); gtag('event',\n" +      "'setsuyaku_btn', {'setsuyaku_btn' : 'setsuyaku_btn'}); });\n" +      "$('.quick_btn').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'quick_btn', 'event_label' : 'quick_btn'}); gtag('event', 'quick_btn',\n" +      "{'quick_btn' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: ": 'setsuyaku_btn'}); }); $('.quick_btn').click(function(){ gtag('event',\n" +      "'click', {'event_category' : 'quick_btn', 'event_label' : 'quick_btn'});\n" +      "gtag('event', 'quick_btn', {'quick_btn' : 'quick_btn'}); });\n" +      "$('.honkaku_btn').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'honkaku_btn', 'event_label' : 'honkaku_btn'}); gtag('event', 'honkaku_btn',\n" +      "{'honkaku_btn' : 'honkaku_btn'}); }); $('.recipe_item').click(function(){\n" +      "gtag('event', 'click', {'event_category' : 'recipe_item', 'event_label' :\n" +      "'recipe_item'}); gtag('event', 'recipe_item', {'recipe_item' : 'recipe_item'});\n" +      "}); $('.all_recipe_btn').click(function(){ gtag('event', 'click',\n" +      "{'event_category' : 'all_recipe_btn', 'event_label' : 'all_recipe_btn'});\n" +      "gtag('event', 'all_recipe_btn', {'all_recipe_btn' : 'all_recipe_btn'}); });\n" +      "$('.sports_wrap .bun_left').click(function(){ gtag('event', 'click',\n" +      "{'event_category' : 'Visseel', 'event_label' : 'Visseel'}); gtag('event',\n" +      "'Visseel', {'Visseel' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: ": 'all_recipe_btn'}); }); $('.sports_wrap .bun_left').click(function(){\n" +      "gtag('event', 'click', {'event_category' : 'Visseel', 'event_label' :\n" +      "'Visseel'}); gtag('event', 'Visseel', {'Visseel' : 'Visseel'}); });\n" +      "$('.sports_wrap .bun_right').click(function(){ gtag('event', 'click',\n" +      "{'event_category' : 'DeNA', 'event_label' : 'DeNA'}); gtag('event', 'DeNA',\n" +      "{'DeNA' : 'DeNA'}); }); $('.sale_bnr').click(function(){ gtag('event', 'click',\n" +      "{'event_category' : 'sale_bnr_mini', 'event_label' : 'sale_bnr_mini'});\n" +      "gtag('event', 'sale_bnr_mini', {'sale_bnr_mini' : 'sale_bnr_mini'}); });\n" +      "$('.top_ec_btn').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'top_ec_btn', 'event_label' : 'top_ec_btn'}); gtag('event', 'top_ec_btn',\n" +      "{'top_ec_btn' : 'top_ec_btn'}); }); $('.top_halal_btn').click(function(){\n" +      "gtag('event', 'click', {'event_category' : 'top_halal_btn', 'event_label' :\n" +      "'top_halal_btn'}); gtag('event', 'top_halal_btn', {'top_halal_btn' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "gtag('event', 'click', {'event_category' : 'top_halal_btn', 'event_label' :\n" +      "'top_halal_btn'}); gtag('event', 'top_halal_btn', {'top_halal_btn' :\n" +      "'top_halal_btn'}); }); $('.gyomuca_slide').click(function(){ gtag('event',\n" +      "'click', {'event_category' : 'gyomuca_slide', 'event_label' : 'gyomuca_slide'});\n" +      "gtag('event', 'gyomuca_slide', {'gyomuca_slide' : 'gyomuca_slide'}); });\n" +      "$('.gyomuca_btn').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'gyomuca_btn', 'event_label' : 'gyomuca_btn'}); gtag('event', 'gyomuca_btn',\n" +      "{'gyomuca_btn' : 'gyomuca_btn'}); }); $('.top_shop_bnr a').click(function(){\n" +      "gtag('event', 'click', {'event_category' : 'top_shop_bnr', 'event_label' :\n" +      "'top_shop_bnr'}); gtag('event', 'top_shop_bnr', {'top_shop_bnr' :\n" +      "'top_shop_bnr'}); }); $('.top_bargain_bnr a').click(function(){ gtag('event',\n" +      "'click', {'event_category' : 'top_bargain_bnr', 'event_label' :\n" +      "'top_bargain_bnr'}); gtag('event', 'top_bargain_bnr', {'top_bargain_bnr' :",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "a').click(function(){ gtag('event', 'click', {'event_category' :\n" +      "'top_bargain_bnr', 'event_label' : 'top_bargain_bnr'}); gtag('event',\n" +      "'top_bargain_bnr', {'top_bargain_bnr' : 'top_bargain_bnr'}); });\n" +      "$(document).ready(function() { $('.drawer').drawer(); }); //infoaccordion\n" +      `$(function(){ $(".infoac dt").not('#noicon').on("click", function() {\n` +      '$(this).next().slideToggle(); $(this).toggleClass("active"); }); }); //scroll\n' +      `$(function(){ // #で始まるリンクをクリックしたら実行されます $('a[href^="#"]').click(function() { //\n` +      'スクロールの速度 var speed = 600; // ミリ秒で記述 var href= $(this).attr("href"); var target =\n' +      `$(href == "#" || href == "" ? 'html' : href); var position =\n` +      "target.offset().top; $('body,html').animate({scrollTop:position}, speed,\n" +      "'swing'); return false; }); }); //matchHeight $(function(){",    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  },  Document {    pageContent: "var position = target.offset().top; $('body,html').animate({scrollTop:position},\n" +      "speed, 'swing'); return false; }); }); //matchHeight $(function(){\n" +      "$('.mh').matchHeight(); }); function news_link(id,year) {\n" +      'document.newslink.ne_id.value=id; document.newslink.ne_year.value=year;\n' +      'document.newslink.submit(); } $(function(){ $("#acMenu dt").on("click",\n' +      'function() { $(this).next().slideToggle(); $(this).toggleClass("active"); });\n' +      '}); $(".information dl dt\n' +      `p:contains('「酒類の品目等の表示義務」改正に伴う「麦旨」の品目表示及び税率適用区分表示の変更について')").find('a').attr({target:"_blank"});\n` +      'objectFitImages();',    metadata: { source: 'https://www.gyomusuper.jp/', loc: [Object] },    id: undefined  }]CheerioWebBaseLoaderはbodyタグ内を読むのですが、styleタグやscriptタグが入ってしまっているからなんですね。そこで、CheerioWebBaseLoaderを使わず、URLからfetchして、cheerioTextで得たbodyタグの中からstyleタグやscriptタグの中身を除去したコードを実行。npx ts-node webLoad.ts https://www.gyomusuper.jp/綺麗に取れました！！bodyContent:お問い合わせ｜会社案内｜サイトポリシー｜個人情報の保護に関する基本方針ホーム商品紹介ミラクルレシピ特集一覧安心安全の取り組み業務スーパーとはGyomucaお問い合わせオンラインショップFC加盟店募集会社案内日本語/ENGLISH/中文NEWITEM新着商品新着ホット＆スパイシーヌードルホットでスパイシーなインスタントヌードルです。スパイスをきかせたスープは、ピリッとした辛さの中にも旨みがあり、クセになります！熱湯をかけて粉末スープと調味オイルを加えるだけの簡単調理も魅力。鍋で煮込んでお好みの具材や、ご飯を入るアレンジもおすすめです。5袋入り。詳しくはこちら詳しくはこちらPICKUP!おすすめ商品商品をもっと見る新着パルメザンチーズのリゾットイタリアの米料理の定番！リゾットです。パルメザンチーズのコクと旨味がたっぷり詰まった濃厚な味わい♪チーズがお好きな方におすすめのレシピです。おうちでお手軽にイタリアンをお楽しみください！詳しくはこちらパルメザンチーズ[要冷蔵]詳しくはこちらPICKUP!おすすめレシピレシピをもっと見るSPECIALTOPICS特集特集をもっと見るSNS公式Instagram・公式X（旧Twitter）TweetsbyGyomusuperOFCL公式Instagram公式X（旧Twitter）2024年8月30日台風10号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風10号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業状況につきましては、台風10号の影響による営業に関するお知らせをご確認ください。※最新の情報に関しましては、ご利用の店舗に直接お問い合わせください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。2024年8月19日フジテレビ「めざましテレビ」で紹介されました2024年8月16日（金）放送のフジテレビ「めざましテレビ」で、業務スーパーの商品が紹介されました。放送局：フジテレビ番組名：「めざましテレビ」放送日：2024年8月16日（金）めざましテレビ2024年8月16日台風7号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風7号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業状況につきましては、台風7号の影響による営業に関するお知らせをご確認ください。※最新の情報に関しましては、ご利用の店舗に直接お問い合わせください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。2024年8月15日【セール情報】9月1日（日）から「お買い得まみれ!!総力祭日頃のご愛顧感謝セール」START！いつも業務スーパーをご愛顧いただきありがとうございます！9月1日（日）から10月31日（木）までの2か月間、感謝の気持ちをたっぷり込めた「お買い得まみれ!!総力祭日頃のご愛顧感謝セール」を開催いたします。国内関連工場のオリジナル商品や海外直輸入商品など、とにかくお得なアイテム盛りだくさん！全国の業務スーパーで皆さまのご来店を心よりお待ちしております。<セール期間>【第1弾】2024年9月1日（日）～9月30日（月）【第2弾】2024年10月1日（火）～10月31日（木）<セール対象店舗>全国の業務スーパー各店（※一部店舗を除く）セール特設ページはこちら2024年8月12日台風5号の影響による営業に関するお知らせいつもご愛顧いただき、誠にありがとうございます。台風5号の今後の進路や状況により、お客さまの安全を最優先としまして、一部店舗では営業時間の短縮および臨時休業させていただく場合がございます。各店舗の営業時間や休業のご確認につきましては、台風5号の影響による営業に関するお知らせをご確認ください。大変ご迷惑をおかけしますが、何卒ご了承いただきますようお願いいたします。一覧を見る『世界の本物』を直輸入！業務スーパーには、世界の国々で現地の人々に愛されている『世界の本物』が盛りだくさん！めずらしいものから日本でもなじみのあるものまで、厳選したアイテムを、高品質＆ロープライスで取りそろえています！安さの秘密自慢の国内自社工場の『オリジナル』国内の自社工場で、さまざまな「食」のニーズに応える、オリジナル商品をつくっています！ユニークな商品から日々の食卓に欠かせない商品までバラエティ豊かに低価格で取りそろえています！安全・安心の秘密スポーツには不思議なチカラがあります。こども達の心や体を強くするとともに、アスリート達の真摯な姿は多くの人々に笑顔と感動を与え、夢に向かって挑戦することの大切さを教えてくれます。神戸物産はヴィッセル神戸、横浜DeNAベイスターズ、神戸ストークスのオフィシャルスポンサーとして地域スポーツの発展を支援し、人々のくらしを応援します。店舗検索特売情報ホームWEBチラシ店舗案内ミラクルレシピ商品紹介直輸入商品国内自社工場商品業務スーパーとは安さの秘密安全安心の取り組み商品開発事前チェック現地工場チェック品質安全検査商品検証FC加盟店募集業務スーパー5つの強み業務スーパーの特徴オープンまでのプロセス体制について契約概要・加盟条件物件・商品のご提案募集お問い合わせ｜会社案内｜サイトポリシー｜個人情報の保護に関する基本方針〒675-0063兵庫県加古川市加古川町平野125番1©2018-GyomuSuperAllRightsReserved.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[セキュリティ・キャンプ 2024 参加記]]></title>
            <link>https://moz-security.hatenablog.com/entry/2024/08/31/121836</link>
            <guid>https://moz-security.hatenablog.com/entry/2024/08/31/121836</guid>
            <pubDate>Sat, 31 Aug 2024 03:18:36 GMT</pubDate>
            <content:encoded><![CDATA[8月12日から8月16日までの5日間で開催されたセキュリティ・キャンプ2024 全国大会のBクラス（プロダクトセキュリティ）にチューターとして参加したので、体験記を書き残す。昨年、Bクラス（当時は、Webセキュリティ）を修了し、今年チューターとして、もう一度セキュリティ・キャンプに参加することになった。昨年の参加記は、以下である。今読み返してみると、次はネクスト受講生かチューターで参加したいということを書いており、今年チューターとして参加できたのはとてもよかった。moz-security.hatenablog.com日程表Bクラスの日程は、このような感じだった。6つの専門講義があり、それに加えて共通講義やグループワーク, 特別講演などがあり、毎日8:30~21:00に稼働するというハードスケジュールとなっている。セキュリティ・キャンプ Bクラス スケジュール共通講義、グループワーク共通講義では、ゲームセキュリティや法律、人の心理・行動特性についての講義があった。また、毎日グループワークの時間が30分あり、1グループ4人構成でセキュリティ教育について話しあっていた。コンピュータを全く知らない主婦や子供からコンピュータサイエンスをある程度学んだ学生などさまざまなターゲットに対して、いろいろなアプローチでセキュリティ技術を伝えようとするアイデアがあり、ディスカッションや最終発表を見ていてとてもおもしろかった。専門講義Bクラスでは、プロダクト開発におけるセキュリティをテーマにして、講義が構成されていた。全て４時間の講義で、座学と演習の両方を行う形式になっている。1日目のホームルームでプロデューサーから、講義設計にあたり未知との遭遇の最大化を目標としている旨を伝えられた。知らないこともたくさん出てくるだろうが、「アウトプットを行う→フィードバックを得る→新たな知らないことが生まれる」のループを回すことをセキュリティキャンプを通じて、また、セキュリティキャンプが終わった後も行うことが大事だということを話されていた。また、技術の話だけでなくお金の話も講義に盛り込むようにしており、コストとセキュリティのバランスを見定めるといった、より社会で行われていることを体感して、社会に出た後に活躍してほしいというお話があった。そういう意味で、プロデューサーがBクラスは社会人クラスと言っていたのもおもしろかった。これら２つのことは、講義を全て終えた今、改めてとてもプロデューサーの講義設計に対する意図や思いを感じている。2日目B1: プロダクトセキュリティの展望セキュリティ・キャンプ2024 全国大会 B1 プロダクトセキュリティの展望(#seccamp2024) | ドクセル"プロダクトセキュリティの展望" では、プロダクトの定義とそれが指す範囲の広さ、非機能要件であるセキュリティと組織としての向き合い方について学んだ。なかでも、社会と技術と資産を面で見れるようになるとセキュリティを俯瞰して見ること・考えることができ、面で見れるようになるためには、社会の変化に敏感になることが重要であるということはとても記憶に残っている。セキュリティを仕事にする上で新技術の把握や継続的な学習は大事だと言われているが、この講義を通して再認識させられた。また、プロダクトの価値を早く・大きく・継続して届けるための技術についても学んだ。これらはお金が密接に絡んでくる点で経営側の視点も必要であり、今まで考えたことがなかったが、組織で自分が影響力を発揮していくためには押さえておく必要はあるし、今後勉強していきたいと思った。最後に、組織規模に応じたセキュリティ対策について学んだ。セキュリティ対策が必要だといっても実際に行うには導入・運用にコストがかかるため、コストとセキュリティのバランスが必要となってくるし、その判断が難しいのはよく言われているためすでにわかっていた。しかし、ではどれくらいの組織規模に対してどのような対策を行うのかということは今まであまり考えたことなく（学生で考える人はあまりいないと思っているが）、グループディスカッションや発表、講師以外の方のお話なども含めてとても学びになった。いろんな会社のいろんな役職の人たちがいるのもセキュリティ・キャンプのよさであると思う。B-2: 情報セキュリティ戦略戦術ワークショップ"情報セキュリティ戦略戦術ワークショップ" では、組織のセキュリティ対策の進め方やインシデントハンドリングについて学んだ。この講義でも、やはり組織規模に応じたセキュリティ対策についてのお話はあり、やらないといけないことはたくさんあるがどれから取り組むかを考えるといったときに、ベストプラクティスやガイドライン、フレームワークは非常に参考になることがわかった。また、インシデント対応において、まず気付ける仕組みと改善の実施が重要であることがわかった。たしかにログが残っていたり、インシデント発生時にアラートが出なかったりすると、そもそもインシデントに気付けない。そのため、セキュリティ担当でなかったとしても、インシデントに気付くために一開発者としてどのような情報（ログ, メトリクス, アラート）が必要なのかは考えるようにしたいと思った。演習では、受講生がグループでインシデントハンドリングを体験しており、チューターとしてはチャットツールでの関係者とのやり取りを見ていた。インシデントというと私は外部の攻撃者からのサイバー攻撃を想像してしまうが、それだけではない。メールの誤送信などといったオペレーションミスや部署間での情報共有の不足、内部不正なども、ちゃんとインシデントであり、それも意外と発生してしまうことがあることを学んだ。演習で関係者とのやりとりがなかなかうまくいかず、大変そうだったのはとても記憶に残っている（覚えるべきとこはそこじゃないw）。3日目B-3: セキュリティ監視入門セキュリティ監視入門 | Notion"セキュリティ監視入門" では、監視の重要性と監視アーキテクチャの設計・構築について学んだ。監視をする上で最も重要で、最初に考えなければいけないのはなぜ監視するのか・何のために監視するのかであり、そこが曖昧であると例え監視を行っていて異常を見つけたり、アラートが出たりしても、その後の対応に繋がらないということはとても頭に残っている。この講義でもB-1に引き続いて、組織規模に応じた監視アーキテクチャの構築やSOCやCSIRTといった組織の構築を学んだ。どれだけのコストをセキュリティ対策にかけるかは経営判断だが、現場で何が行われているのかやどのようなデータがどこに存在しているかは把握していなければ、セキュリティ監視を行うことやそれにかかるコストを見積もることはできない。ログの対象となるデータは無限と言っていいほど存在しており、どのログを取るのかとコストのバランスを考えることがセキュリティ担当者としての腕の見せ所であることがわかった。また、セキュリティ監視において大規模な運用が始まると不可逆性はかなり高いことも学んだ。これは、データ移行が大変になるからという理由だったが、私自身今までトライアンドエラーを繰り返すことをよしとしていたため、セキュリティ監視というケースではそれがあまりふさわしくないこともあることがわかった。B-4: モダンなプロダクト開発を攻撃者の視点で捉える"モダンなプロダクト開発を攻撃者の視点で捉える" では、攻撃者がどうやって組織に対して攻撃を行うのかについて学んだのちに、それにやられないために防御側はどのような対策が必要なのかということを考えた。講義を通して、攻撃側と防御側の両方の視点でセキュリティを考えることができたのは非常に学びになった。なかでも、攻撃者はフロー（グラフ）で考え、防御側はリストで考えるというのはとても記憶に残っている。攻撃側は一点だけでも突破できればいいのに対して、防御側は全てを守らなければならない。加えて、多層防御を行い、全てを守っていると思っていても、攻撃者は全く思わぬところからクリティカルな攻撃を行うかもしれない（VPNの脆弱性を突いて初期侵入とかではなく、物理的に侵入するとか）。そのため、セキュリティ担当者として組織を守るには、ベストプラクティスやガイドラインを参考にしつつ、明確なWhyを持ったセキュリティ対策を取るように意識することが重要になってくるとわかった。ゼロトラストやDevSecOpsといった新しく出てきたワードに縛られないようにすることも重要であり、それもWhyを意識することで具体的なセキュリティ対策の実現という本質的な部分に焦点を当てることができることを学んだ。大学や勉強会では防御について学んだり考えたりすることが多いが、攻撃側の視点を養うためにも、もっとHack The Boxを頑張ろうと思う。4日目B-5: 設計・開発・テストにおけるセキュリティの実践と考え方を知ろう"設計・開発・テストにおけるセキュリティの実践と考え方を知ろう" では、プロダクト開発において考慮すべきセキュリティと実践方法について学んだ。プロダクトをセキュアにするというと、実装する際に脆弱性を作らないよう気をつけたりリリース前に脆弱性診断を行ったりすることを私はイメージする。しかし、要件定義・設計・実装の段階にテスト工程を前倒しにするというShift-leftの理解と実践により、開発工程の早い段階で脆弱性の検出を行うことが重要であることがわかった。ただ、早い段階で脆弱性を発見しようとするとやらないといけないことが大量に増えるため、できるだけ自動化して、人でないとできない箇所に開発者が注力できる仕組みを作ることが大事だと学んだ。セキュリティに携わるものとして、意識改革やセキュリティ教育ももちろん大事だが、技術者である以上、仕組みで解決できないかという視点は大事だと思う。脆弱性を自動で発見する方法としてはSASTやDASTというものがあり、これらのツールを使ってスキャンを行うことを学んだ。これをCI/CDのパイプラインに組み込むことで、例えば、マージされたタイミングでSASTを行い、ステージング環境にデプロイしたタイミングでDASTを行うといったことができる。これにより、仮に開発者に全くセキュリティの知識がなくても、ある程度のセキュリティは担保することができることがわかった。B-6: クラウドネイティブなシステムを保護するための実践的KubernetesセキュリティGitHub - kyohmizu/seccamp2024-B6"クラウドネイティブなシステムを保護するための実践的Kubernetesセキュリティ" では、Kubernetesとは何かということととコンテナやKubernetesに対する脅威・セキュリティ対策について学んだ。なかでも、3章の攻撃シナリオを学び、実際に演習したことは記憶に残っている。Kubernetesやコンテナに対する攻撃手法として、コンテナブレイクアウトや認証情報の窃取があることはすでに知っていたが、それ単体で攻撃として成り立つわけではなく、攻撃の中の一工程に過ぎない。そのため、演習を通して、OSコマンドインジェクションの脆弱性を突いた後、徐々に範囲を拡大していき、最終的にKubernetesクラスタのAdmin権限取得まで行うとという経験ができたのはよかった。Kubernetesに対する脅威を身にしみて実感できたし、攻撃者が範囲を拡大していく（ラテラルムーブメント）どこか一箇所でも防ぐことができればここまでやられなかったかもしれないといった防御視点でも考えることができた。講義全体を通して昨年に引き続き、B-1からB-6まで非常に幅広い分野の講義があった。どの講義も講師の方が4時間で終わるか怪しいと講義前から言うほどのボリュームになっており、チューターとして参加しながらも、全てを理解できているわけではない。また、講義の位置付けとしては一応入門となっているし、講義資料には大量のリンクが貼ってある。これは、もっと勉強することはあるよというメッセージ？だろう。勉強するための足がかりも与えられた今、これらを活用して、今後さらに勉強していきたいと思う。また、どの講義でもコストとセキュリティについて取り上げられており、組織の中でセキュリティ対策を進めていこうと思うとコストとセキュリティを見定める能力（費用対効果を考える能力）は求められることを強く実感した。チューターとして立ち位置としては講師と受講生の間となるため、セキュリティ・キャンプ全体を通して、昨年よりもいろんな人といろんな話をすることができた気がする。今思い返すと、受講生として参加した昨年は講義に食らいつくのに必死だったし、自分のスキルに自信もなく、講師の方にも積極的に話を聞きにいこうとしていなかった。今年はチューターとして講義全体を俯瞰して見ることができ、受講生として参加したときよりも少しだけ気持ちに余裕が持てたのはよかったと思う。一方で、受講生の知識・スキルの高さには驚かされ、チューターと受講生というよりは、同じ関心を持つ同世代の仲間という気持ちで講義だけに限らず、休憩時間やご飯の時間も含めてたくさんの話ができたし、そのなかで勉強になることも多かった。チューターとして参加してみて、受講生が演習で困っているときに一緒に解決できたときには私も嬉しかったし、教えたり技術を広めることの面白さを少しだけ感じることができた気がする。セキュリティ・キャンプを修了した方には、チューターとしてセキュリティ・キャンプにもう一度参加することも検討に入れるのをお勧めしたい。感想どの講義も濃密で、チューターとして参加した今年も私にとって初めて知ることも多かった。勉強するきっかけをたくさん与えられるので、キャンプ中はもちろんのことキャンプ後も継続して勉強するネタが見つかるし、私自身これからもっと勉強したいと思う。また、受講生やチューターとして参加している同世代のすごい人たちやセキュリティの第一線で活躍している講師の方や関係者の方を見て話すことができ、今年もとても刺激を受けることができた。講義資料自体は講師の方が公開されているものも多くある（Bクラスの講義に限らず）ため、講師の方と話したり、みんなで議論したりできることこそがセキュリティ・キャンプに参加することの一番のよさであると思う。セキュリティに興味がある人はもちろん、もっと広くコンピュータに興味がある人全員にセキュリティ・キャンプを勧めたい。昨年書いていたので、今年も書いておこうと思う。来年はネクストの受講生としてまた戻ってきたい。Bクラス ほかの方のブログhack.nikkei.comzenn.dev]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[SRETT#10 ~ 夏のSRE祭り！アーカイブ動画公開！]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/30/230631</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/30/230631</guid>
            <pubDate>Fri, 30 Aug 2024 14:06:31 GMT</pubDate>
            <content:encoded><![CDATA[shu-kob.hateblo.jp2024年8月23日に弊社スリーシェイクのコミュニティ勉強会「SRETT #10 ~ 夏のSRE祭り！」が開催されました。www.youtube.comアーカイブ動画も公開されています！当日ご参加できなかった方もぜひご覧ください！自分は当日誘導係をやっていて、最初の菱田さんのセッション「SRE NEXT 2024 で形にしたバトンを渡せる仕組み」は最後のちょびっとだけしか聴けていないから、観ようかな。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[CCoEとは]]></title>
            <link>https://sreake.com/blog/ccoe%e3%81%a8%e3%81%af/</link>
            <guid>https://sreake.com/blog/ccoe%e3%81%a8%e3%81%af/</guid>
            <pubDate>Fri, 30 Aug 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[目次 はじめに CCoEとは クラウド活用に関する様々な課題 CCoE導入の際のポイント CCoEの導入事例 Sreakeでできること 1. はじめに 現在、さまざまな業界の多種多様なシステムにおいて、クラウドサービス­ […]The post CCoEとは first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Kubernetesとは]]></title>
            <link>https://sreake.com/blog/kubernetes/</link>
            <guid>https://sreake.com/blog/kubernetes/</guid>
            <pubDate>Fri, 30 Aug 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[目次 はじめに Kubernetesの特徴と代表的な機能 Kubernetesを導入する際のポイント Kubernetesの導入事例 Sreakeでできること 1. はじめに 多様で複雑な現代のソフトウェア開発において、 […]The post Kubernetesとは first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[オライリーのAWS生成AI本]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/29/234143</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/29/234143</guid>
            <pubDate>Thu, 29 Aug 2024 14:41:43 GMT</pubDate>
            <content:encoded><![CDATA[AWSではじめる生成AI ―RAGアプリケーション開発から、基盤モデルの微調整、マルチモーダルAI活用までを試して学ぶ作者:Chris Fregly,Antje Barth,Shelbee EigenbrodeオライリージャパンAmazonそういや、オライリージャパンからAWSの生成AI本出てますね。欲しいと思いながらも買うてない。現状、自身の仕事のほとんどはGoogle cloudなので、AWS書籍どうしようかと思ってますが、面白そうなら買うてみるしか！翻訳はAWS Japanの久富木 隆一さん。AWSの中の人が翻訳しているので確かでしょうね！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GitLab Runnerによる簡易的なCICDの設計と実装]]></title>
            <link>https://sreake.com/blog/gitlab-runner-cicd/</link>
            <guid>https://sreake.com/blog/gitlab-runner-cicd/</guid>
            <pubDate>Thu, 29 Aug 2024 05:34:28 GMT</pubDate>
            <content:encoded><![CDATA[はじめに はじめまして。Sreake事業部インターン生の高島です。2023年10月から長期インターン生としてKubernetes関連技術の習得とSRE技術の調査・検証を行っています。普段は、情報系の大学院生で、数値解析に […]The post GitLab Runnerによる簡易的なCICDの設計と実装 first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[「SREをはじめよう」(Becoming SRE邦訳)が出版]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/28/235736</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/28/235736</guid>
            <pubDate>Wed, 28 Aug 2024 14:57:36 GMT</pubDate>
            <content:encoded><![CDATA[SREをはじめよう ―個人と組織による信頼性獲得への第一歩作者:David N. Blank-EdelmanオライリージャパンAmazon「Becoming SRE」の邦訳である「SREをはじめよう」が2024/10/8オライリージャパンから発売されます！翻訳は、オライリーのSRE系の邦訳を数多く手掛けられてきた山口 能迪さん（Google所属）個人がSREになる、組織がSREになるという二面で書かれているようで、今からとても楽しみです！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Google Cloud エンジニアおよび Google Cloud パートナー2社による生成AI利活用を進めるためのプロセス]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/27/235840</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/27/235840</guid>
            <pubDate>Tue, 27 Aug 2024 14:58:40 GMT</pubDate>
            <content:encoded><![CDATA[pages.sreake.comイベントで登壇していました。ご参加くださった方はありがとうございました！良い評価をいただけたようで光栄です！今回、「生成AI利活用を進めるためのプロセス」というテーマだったので、普段私があまり話さないことも話せて新鮮でした。genai-users.connpass.com普段は、日本生成AIユーザ会でハンズオンをやっているように、具体的技術を話すことが多いので。今回とても良い経験になりました。今後も良い発表ができるよう精進していきます！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[後継者不足のCOBOLを生成AIに引き継ぎ]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/26/235854</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/26/235854</guid>
            <pubDate>Mon, 26 Aug 2024 14:58:54 GMT</pubDate>
            <content:encoded><![CDATA[www.itmedia.co.jpIT media AI+より。虚構新聞かと思いましたが（笑）、本当にようです。ベトナムの研究者が論文を出したのですね。日本でもCOBOLで書かれたシステムはまだまだ残っていますが、COBOL書けるエンジニアが高齢になってきて、後継者不足でもあります。海外もベトナムも同様なのですね。リプレイスしていくのも大事かと思いますが、全部のCOBOLシステムのリプレイスも難しいでしょうし、リプレイスしつつも、生成AIに書かせるのが現実解なのかもしれません。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[テックブログを書く時にやっていること]]></title>
            <link>https://syu-m-5151.hatenablog.com/entry/2024/08/26/210112</link>
            <guid>https://syu-m-5151.hatenablog.com/entry/2024/08/26/210112</guid>
            <pubDate>Mon, 26 Aug 2024 12:01:12 GMT</pubDate>
            <content:encoded><![CDATA[はじめにテックブログの執筆プロセスは、エンジニアの経験や知識を活用し、多様な情報源から価値ある内容を抽出し、読者にとって有益な形に整理する作業です。この過程では、自身の業務経験はもちろん、他のブログ記事や技術書籍など、幅広い情報を取り入れ、それらを咀嚼し、独自の視点で再構築します。この時に困難は伴いますが、同時に自身の考えを整理し、新たなアイデアを生み出す貴重な機会となります。 多くのエンジニアと同様に、私もブログのネタが自然に湧き出てくるタイプではありません。そこで、試行錯誤を重ねて確立した、効果的なブログ執筆方法を皆さんと共有したいと思います。この方法は、情報の収集から記事の執筆まで、段階的なアプローチを採用しています。各ステップを意識的に踏むことで、自分として納得できる記事を継続的に生み出すことが可能になります。以下に、私が日々実践しているプロセスを詳しく説明していきます。1. データ収集まずは、様々な源から幅広く情報を集めることから始めます。そして、実際に手を動かして経験を積みます。これらはすべて、潜在的なブログのネタになります。日々の業務で気づいたことをメモするデバッグ中に遭遇した興味深い問題や、その解決プロセスを詳細にメモしましょう。これらの経験は、他のエンジニアにとって貴重な学びとなる可能性があります。Slack、Notion、あるいは物理的なノートなど、自分に合った方法でメモを取る習慣をつけることが重要です。本を読みまくる技術書を定期的に読むことで、新しい知識や視点を得ることができます。読んだ本の要点や自分の見解をまとめることで、読者に価値ある情報を提供できます。月に1-2冊のペースで読書し、その内容を整理することをおすすめします。同僚との会話を大切にする昼食時や休憩時間の雑談でも、重要なトピックが浮上することがあります。例えば、マイクロサービスの課題について話し合った内容を、より深く掘り下げてブログ記事にすることができます。会話の中で出てきた興味深いポイントをメモする習慣をつけましょう。業界のニュースや記事を読む毎日30分程度、技術ブログやニュースをチェックする時間を設けましょう。最新のトレンドや技術動向をまとめた記事を定期的（例えば週1回）に書くことで、自身の知識も整理でき、読者にも価値を提供できます。実際に手を動かして試してみる興味のある新しいフレームワークやツールを使って、小規模なプロジェクトを作成してみましょう。この学習過程と気づきをステップバイステップで記事にまとめることで、読者に実践的な情報を提供できます。週末や空き時間を利用して、定期的に新しい技術に触れる機会を作りましょう。個人プロジェクトで開発する最近話題のツールや技術を自分のプロジェクトに組み込んでみましょう。この統合プロセスを詳細に記録し、遭遇した課題や解決策、得られた知見をブログ記事にまとめることで、読者に実用的な情報を提供できます。月に1つは新しい技術を個人プロジェクトに取り入れる目標を立てるのも良いでしょう。コードリーディングを習慣化するオープンソースのプロジェクトのコードを定期的に読むことで、優れた設計パターンや実装テクニックを学ぶことができます。興味深い発見があれば、それを解説する記事を書いてみましょう。週に1回、30分程度の時間をコードリーディングに充てることをおすすめします。2. データを創発させる集めたデータを基に新しい関連性を見出す創造のプロセスは、ブログ記事作成の核心部分です。既存の要素を新しく組み合わせることで、独自の洞察を生み出します。異なる分野の知識を結びつける人文科学や自然科学など、エンジニアリング以外の分野の本や記事を読むことで、新しい視点を得ることができます。例えば、心理学の概念をソフトウェアアーキテクチャの設計に応用するなど、意外な関連性を探求し、ブログ記事のユニークなテーマとして扱いましょう。月に1冊は異分野の本を読むことをおすすめします。原理原則に立ち返る様々なフレームワークや技術を比較分析する中で、それらの根底にある共通の設計原則や思想を見出すことができます。これらの普遍的な原則をブログの核心テーマとして扱うことで、読者に深い洞察を提供できます。技術書を読む際は、表面的な機能だけでなく、その背後にある設計思想にも注目しましょう。問題を抽象化するチームで直面した具体的な問題を一般化し、より広い文脈で捉え直すことで、多くのプロジェクトに適用できる普遍的な課題が見えてくることがあります。この抽象化された問題解決アプローチをブログにまとめることで、様々な状況に応用可能な知見を読者に提供できます。問題に直面したときは、「これは他のどんな場面でも起こりうるか？」と自問する習慣をつけましょう。技術のクロスオーバーを探す異なる技術領域や手法を組み合わせることで、新しいアイデアが生まれることがあります。例えば、機械学習の手法をWebアプリケーション開発に適用するなど、異分野の融合を探求し、そのアイデアをブログで提案してみましょう。週に1回、「今取り組んでいる技術は、他のどの分野と組み合わせられるか」を考える時間を設けるのも良いでしょう。3. 放置するこのステップが意外と大事です。わざとブログのアイデアを放置することで、無意識のうちに考えが熟成されます。完全に忘れるブログのアイデアをメモした後、意図的に1週間程度そのことを考えないようにします。この期間が経過した後に再度内容を見直すと、新鮮な目で客観的に評価できることがあります。Notionやトレロなどのツールを使って、アイデアを整理し、定期的に（例えば週1回）見直す時間を設けるのが効果的です。全く違う活動に没頭する技術的な思考から離れ、全く異なる活動に取り組むことで、思わぬインスピレーションを得ることがあります。例えば、自然の中でのアクティビティや芸術活動などに時間を費やしてみましょう。週末や休暇を利用して、定期的に技術以外の活動に没頭する時間を作ることをおすすめします。眠りにつく直前まで考え、そして手放す就寝前にブログの構成や内容について考えを巡らせ、その後意識的に手放すことで、睡眠中に無意識的な処理が行われることがあります。翌朝、新たな視点やアイデアが浮かんでくることも少なくありません。寝る前の15分間を「ブログアイデアタイム」として設定し、思考をノートに書き出してから眠るという習慣をつけてみましょう。4. もう一度考え続けてひらめきを待つアイデアを温めた後、再び記事の構想に取り組む時間です。この段階では、長期的な視点を持ちつつ、具体的な記事の形を模索します。過去のメモを読み返す1ヶ月以上前に書いたアウトラインや断片的なメモを見直すことで、当初気づかなかった重要なポイントが浮かび上がってくることがあります。これらの新たな気づきを記事の核心部分として活用しましょう。月に1回、過去のメモを整理し、再評価する時間を設けることをおすすめします。技術の未来を想像する現在の技術トレンドを分析し、5年後、10年後の技術の姿を想像してみましょう。この長期的な視点から現在の技術の使い方を解説することで、読者により価値のある洞察を提供できます。四半期に1回程度、技術の将来予測に関する記事を書くことを目標にしてみてください。複数の記事案を比較する同じテーマについて、異なるアプローチや切り口で3つ程度の記事案を考えてみましょう。それぞれの特徴を比較し、最も読者の役に立つと思われる方向性を選択します。この過程で、当初は思いもよらなかった新しい視点が生まれることもあります。記事を書く前に、必ず複数の構成案を作成し、それぞれのメリット・デメリットを評価する習慣をつけましょう。他の記事との差別化を考える同じトピックに関する既存の記事を徹底的に調査し、自分の経験や知識を活かして、どのような新しい視点や情報を提供できるかを考えます。他の記事にはない独自の切り口や、より深い洞察を加えることで、記事の価値を高めることができます。記事を書く前に、必ず競合する記事を5つ以上読み、それぞれの特徴をメモし、自分の記事の差別化ポイントを明確にしましょう。5. 出てきたアイデアの使い方を考えるいよいよ記事の具体的な構成を考える段階です。技術的な正確さを保ちつつ、読みやすく、実用的な内容にすることが重要です。同時に、記事の質を高め、読者との信頼関係を構築するために、以下の点に特に注意を払ってください。導入部分を工夫する読者の興味を引くために、記事の冒頭で技術が解決できる身近な問題や、その技術がもたらす具体的なメリットを提示します。例えば、「この技術を使うことで開発時間を30%削減できた」といった具体的な数字や、実際のユースケースを紹介することで、読者の関心を高めることができます。コードと説明のバランスを取る技術記事では、コード例と説明文のバランスが重要です。核となる概念を簡潔に説明した後、実際のコード例を示し、そのコードの各部分の詳細な解説を加えます。コードブロックは適度な長さに保ち、長すぎる場合は分割して説明を挟むことで、読者の理解を助けます。自分の経験を織り交ぜる技術の解説に加えて、その技術を実際のプロジェクトで使用した際の経験談を盛り込みます。直面した課題、試行錯誤のプロセス、最終的な解決策など、具体的なストーリーを共有することで、読者にとってより実践的で価値ある情報を提供できます。読者の疑問を予測する自分がその技術を学んだ時に抱いた疑問や、同僚から受けた質問などをリストアップし、それぞれに答える形で記事を構成します。FAQセクションを設けたり、「よくある間違い」といった項目を追加することで、読者の潜在的な疑問に先回りして答えることができます。根拠を示し、判断基準を明確にし、批判的思考を持つ強い主張や比較を行う際は、その根拠と判断基準を明確に示してください。「この方法が最善である」や「AよりBの方が優れている」と述べる場合、なぜそう考えるのか、どのような観点（パフォーマンス、可読性、学習曲線など）で判断したのかを詳細に説明してください。同時に、自説の限界や適用範囲も認識し、「この方法はすべての状況で最適というわけではありません」といった但し書きを加えることで、読者の批判的思考を促します。また、個人の意見や経験に基づく主張と、客観的な事実や統計データを明確に区別してください。「私の経験では...」や「一般的に言われているのは...」といった前置きを適切に使用することで、読者は情報の性質を正確に理解できます。まとめと次のステップを示す記事の最後には、主要ポイントの簡潔なまとめを提供するだけでなく、読者が次に取るべきアクションを具体的に提案します。例えば、その技術をさらに深く学ぶためのリソース、関連する技術やツール、次に挑戦すべき課題などを提示することで、読者の継続的な学習を促進します。さいごにテックブログの執筆は、私たちエンジニアにとって、単なる記事作成以上の意味を持つ活動のはずです。日々の経験や学びを整理し、深め、そして誰かと共有する機会として捉えることができます。完璧を目指すあまり執筆を躊躇するよりも、まずは自分自身が興味を持つテーマから書き始めることが大切だと私は考えています。 このアプローチは、読む人の役に立つかもしれないという期待とともに、執筆者自身の成長にもつながります。ブログを書く過程で、自分の考えを整理し、新たな視点を得られることもあります。それぞれのエンジニアの経験や視点は異なりますから、自分の言葉で記事を綴ることで、誰かにとって新しい気づきを提供できるかもしれません。日々の仕事や学習で得た知識や経験をブログにすることで、自分自身の中で新たな発見があったり、個人的な成長を感じたりすることがあります。また、読んでくれた人からのコメントや反応が、さらなる学びのきっかけになることもあります。最後に、読んでくださっている方々に伝えたいのは、あなたの経験や知識にも必ず誰かにとっての価値があるということです。 小さなことでも、誰かにとっては新しい発見や学びのきっかけになるかもしれません。ためらわずに書いてみることをお勧めします。テックブログの執筆を通じて、私たち一人一人が少しずつ学び、成長できたらいいなと思っています。あなたの書いた記事が、誰かの助けになるかもしれません。今日から始めてみるのはいかがでしょうか。各プロセスで生成AIを利用する際の注意点とか書こうと思ったんですけどもう良い時間なのでご飯に行きます。参考文献と言うか読んだ方がいい本この本は、テックブログのネタに困ったときというかアイデアが出ない時の救世主です。私はこの本から多大な影響を受けており、このブログで紹介した5つのステップもここから着想を得て実践しています。著者の主張する「新しいアイデアは既存の要素の新しい組み合わせ」という考え方は、肩の荷が下りるので本当に大切です(いつもはアイディアって言ってるんですけど今回はこの本に敬意を込めてアイデアとしてます)。アイデアのつくり方作者:ジェームス W.ヤングCCCメディアハウスAmazonエンジニアとして文章を書くには「考える力」が不可欠です。この本は、その力を養うのに最適な一冊です。新版　思考の整理学 (ちくま文庫)作者:外山滋比古筑摩書房Amazonみなさん、最後まで読んでくれて本当にありがとうございます。途中で挫折せずに付き合ってくれたことに感謝しています。読者になってくれたら更に感謝です。Xまでフォロワーしてくれたら泣いているかもしれません。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[生成AIアプリケーション開発ノーコードフレームワークDify]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/25/233704</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/25/233704</guid>
            <pubDate>Sun, 25 Aug 2024 14:37:04 GMT</pubDate>
            <content:encoded><![CDATA[dify.ai最近、Difyの話題をよく聞くので、軽くご紹介したいと思います。Difyとは？ 生成AIアプリ開発を劇的に簡素化するプラットフォームDifyは、生成AIアプリケーションをノーコードで開発できる、非常に革新的なプラットフォームです。これまで、生成AIアプリの開発は、高度なプログラミングスキルを必要とし、専門エンジニアでなければ実現が難しいものでした。しかし、Difyの登場により、この状況が一変。非エンジニアでも、直感的な操作で複雑なAIアプリケーションを構築できるようになりました。Difyが選ばれる理由ノーコード開発: プログラミングの知識がなくても、ブロックを組み合わせるように視覚的にアプリを構築できます。RAG（Retrieval Augmented Generation）対応: 大規模言語モデル（LLM）と外部データソースを連携させ、より高度なAI機能を実現できます。オープンソース: プラットフォーム自体がオープンソースであり、自由にカスタマイズ・拡張できます。高機能: チャットボット、AIアシスタント、要約ツールなど、さまざまなタイプの生成AIアプリを開発可能です。企業との連携: 既存の企業システムとの連携もスムーズに行え、業務効率化に貢献します。Difyの主な特徴柔軟性: AIプロセスを自由に組み合わせて、柔軟なアプリケーションを開発できます。統合性: 既存のシステムとの連携が容易で、企業内の既存のデータやシステムと統合できます。監視性: 実行時の状況を監視し、AIモデルの性能を継続的に改善できます。スケーラビリティ: 需要に応じて、簡単にシステムを拡張できます。Difyでできることチャットボットの開発: 自然な会話ができるチャットボットを簡単に作成できます。AIアシスタントの開発: 顧客対応や業務支援を行うAIアシスタントを開発できます。文書の自動生成: レポートや記事などを自動生成できます。データ分析: 大量のデータを分析し、有益な情報を抽出できます。Difyが注目される理由生成AIの民主化: 生成AIの技術を、より多くの人々に開放し、AIの活用範囲を広げます。開発コストの削減: 高度なエンジニアを雇用する必要がなく、開発コストを大幅に削減できます。開発期間の短縮: ノーコード開発により、開発期間を大幅に短縮できます。まとめDifyは、生成AIの開発を劇的に簡素化するプラットフォームです。非エンジニアでも、高度なAIアプリケーションを開発できるため、生成AIの活用範囲が大きく広がることが期待されています。もし、生成AIに興味があり、独自のアプリケーションを開発したいと考えているのであれば、Difyは非常に魅力的な選択肢と言えるでしょう。さらに詳しく知りたい方へDify公式サイト: https://dify.ai/jpDifyの始め方（非エンジニアでも生成AIアプリが作れる最強ツール）: https://zenn.dev/en2enzo2/articles/824877e1099508Difyは、生成AIの分野で注目を集めているプラットフォームです。ぜひ、この機会にDifyについて詳しく調べてみてください。何か他に知りたいことがあれば、お気軽にご質問ください。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[この世の中に溢れているので自分が発言する必要はないが「ソフトウェアは認知の限界まで複雑になる」を自分なりに再考する]]></title>
            <link>https://syu-m-5151.hatenablog.com/entry/2024/08/25/142213</link>
            <guid>https://syu-m-5151.hatenablog.com/entry/2024/08/25/142213</guid>
            <pubDate>Sun, 25 Aug 2024 05:22:13 GMT</pubDate>
            <content:encoded><![CDATA[人間が何もしないと病気になるのと同じように、ソフトウェアも何もしないと複雑になる。はじめにソフトウェア開発の世界に飛び込んでから、「ソフトウェアは認知の限界まで複雑になる」という言葉を耳にしたとき、正直なところ、「ほへー」って思いながら何も理解していませんでした。しかし、大規模なシステムに携わるようになって、その言葉の重みを身をもって感じるようになりました。内部構造や相互作用が複雑化し、全体を把握するのが難しくなっていく。それは挑戦であると同時に、私たち開発者の存在意義を問いかけるものでもあります。A Philosophy of Software Design, 2nd Edition (English Edition)作者:Ousterhout, John K. Amazonこの複雑性との闘いは、時に苦しいものです。でも、それを乗り越えたときの喜びは何物にも代えがたい。私たちの理解力の限界に挑戦し続けることで、成長の機会を得られるのかもしれません。また、絶対的な正解が存在しないことも認識することが重要です。それぞれの組織や開発チームにとっての最適解は異なるため、継続的に自分たちの状況を評価し、最適なアプローチを探り続ける必要があります。この過程では、チームメンバー間のオープンなコミュニケーションと実験的な姿勢が鍵となります。時には失敗することもありますが、そこから学びを得て前進することで、長期的には組織全体の能力向上につながるでしょう。 speakerdeck.comなお、この概念は広く知られており、多くの議論がなされています。しかし、自分なりに再考することには大きな意義があります。なぜなら、個人の経験や視点を通じて理解を深めることで、この普遍的な課題に対する新たな洞察や独自のアプローチを見出せる可能性があるからです。また、自分の言葉で表現し直すことで、チーム内での議論を促進し、共通理解を深める機会にもなります。さらに、技術の進化や開発手法の変化に伴い、この概念の意味や影響も変化しているかもしれません。そのため、現代のコンテキストにおいてこの概念を再評価することは、ソフトウェア開発の未来を考える上で重要なのです。正直なところ、このブログに書いていることは完全に自己満足かもしれません。しかし、この自己満足的な行為を通じて、私自身の理解を深め、そして少しでも他の人の考えるきっかけになれば、それはそれで価値があるのではないでしょうか。個人的には「Good Code, Bad Code ～持続可能な開発のためのソフトウェアエンジニア的思考」や「ルールズ・オブ・プログラミング ―より良いコードを書くための21のルール」も良かったのです。資料としては「複雑さに立ち向かうためのコードリーディング入門」や「オブジェクト指向のその前に-凝集度と結合度/Coheision-Coupling」も合わせてオススメです。複雑性の源泉ソフトウェアの複雑性は様々な要因から生まれます。機能の増加：全ての機能は最初から分かってるわけでなくユーザーの要求に応えるため、次々と新機能が追加されていく。レガシーコードの蓄積：古いコードが新しいコードと共存し、相互作用する。技術的負債：短期的な解決策が長期的な複雑性を生み出す。外部依存関係：サードパーティライブラリやAPIの統合が複雑性を増す。スケーラビリティ要件：大規模なデータや高いトラフィックに対応するための設計が複雑さを増す。これらの要因が相互に作用し合い、ソフトウェアシステムは徐々に、そして時には急激に複雑化していきます。複雑性の影響過度の複雑性は、ソフトウェア開発プロセス全体に深刻な影響を及ぼします。開発速度の低下：新機能の実装や既存機能の修正に時間がかかるようになる。バグの増加：複雑なシステムほど、予期せぬ相互作用やエッジケースが発生しやすい。メンテナンス性の低下：コードベースの理解が困難になり、変更のリスクが高まる。オンボーディングの難化：新しいチームメンバーが全体を把握するまでの時間が長くなる。イノベーションの阻害：既存システムの制約が新しいアイデアの実現を妨げる。複雑性との共存完全に複雑性を排除することは不可能ですが、以下の戦略を通じて管理することは可能です。モジュール化：システムを独立した、理解しやすいコンポーネントに分割する。抽象化：詳細を隠蔽し、高レベルの概念を通じてシステムを理解・操作できるようにする。設計パターンの活用：一般的な問題に対する標準的な解決策を適用する。継続的なリファクタリング：定期的にコードを見直し、改善する。適切な文書化：システムの構造や意思決定の理由を明確に記録する。マイクロサービスアーキテクチャの採用は、大規模なモノリシックシステムの複雑性を管理するための一つのアプローチです。しかし、これは単に銀の弾丸ではなく複雑性の性質を変えるだけで、新たな形の複雑性（例えば、サービス間通信やデータ一貫性の管理）をもたらす可能性があります。そのため、アーキテクチャの選択は慎重に行い、トレードオフを十分に考慮する必要があります。マイクロサービスアーキテクチャ 第2版作者:Sam Newmanオーム社Amazon複雑性と認知負荷ソフトウェアの複雑性は、開発者の認知負荷と密接に関連しています。人間の脳には情報処理能力の限界があり、この限界を超えると効率的な問題解決や創造的思考が困難になります。プログラマー脳 ～優れたプログラマーになるための認知科学に基づくアプローチ作者:フェリエンヌ・ヘルマンス,水野貴明,水野いずみ秀和システムAmazon複雑なソフトウェアシステムは、以下の方法で開発者の認知負荷を増大させます。同時に考慮すべき要素の増加複雑な相互依存関係の理解抽象化レベルの頻繁な切り替え長期記憶と作業記憶の継続的な活用これらの要因により、開発者は「認知の限界」に達し、それ以上の複雑性を効果的に管理することが困難になります。以下は、複雑性が増大したコードの例です。// ComplexSystem は、システム全体の複雑性を体現する構造体です。// 複雑性の要因：多数の依存関係、状態管理、イベント処理、設定管理の組み合わせtype ComplexSystem struct {    components     map[string]Component            // 動的に管理される多数のコンポーネント    interactions   map[string][]string             // コンポーネント間の複雑な相互作用を表現    stateManager   *StateManager                   // 全体の状態を管理する複雑なロジック    eventBus       *EventBus                       // 非同期イベント処理による複雑性    configProvider ConfigProvider                  // 動的な設定変更による複雑性    logger         Logger                          // 複数の場所でのロギングによる情報の分散    cache          *Cache                          // パフォーマンス最適化のための追加レイヤー    metrics        *MetricsCollector               // システム監視のための追加の複雑性    errorHandler   ErrorHandler                    // カスタムエラーハンドリングによる複雑性    scheduler      *Scheduler                      // 非同期タスクスケジューリングによる複雑性}// ProcessEvent は、イベント処理の複雑性を示す関数です。// 複雑性の要因：多段階の処理、エラーハンドリング、状態更新、非同期処理の組み合わせfunc (cs *ComplexSystem) ProcessEvent(event Event) error {    cs.metrics.IncrementEventCounter(event.Type)  // メトリクス収集による複雑性    cs.logger.Log("Processing event: " + event.Name)        // キャッシュチェックによる条件分岐の増加    if cachedResult, found := cs.cache.Get(event.ID); found {        cs.logger.Log("Cache hit for event: " + event.ID)        return cs.handleCachedResult(cachedResult)    }    // 複雑な依存関係の解決    affectedComponents := cs.resolveAffectedComponents(event)        // ゴルーチンを使用した並行処理による複雑性の増加    resultChan := make(chan ComponentResult, len(affectedComponents))    for _, componentID := range affectedComponents {        go cs.processComponentAsync(componentID, event, resultChan)    }    // 非同期処理結果の収集と統合    for i := 0; i < len(affectedComponents); i++ {        result := <-resultChan        if result.Error != nil {            cs.errorHandler.HandleError(result.Error)            return result.Error        }        cs.updateSystemState(result)    }    // 動的設定に基づく条件付き処理    config := cs.configProvider.GetConfig()    if config.EnablePostProcessing {        if err := cs.performPostProcessing(event); err != nil {            cs.logger.Error("Error in post-processing: " + err.Error())            return cs.errorHandler.WrapError(err, "PostProcessingFailed")        }    }    // イベントバスを使用した非同期通知    cs.eventBus.Publish(NewStateChangedEvent(event.ID, cs.stateManager.GetCurrentState()))    // 次のスケジュールされたタスクのトリガー    cs.scheduler.TriggerNextTask()    cs.logger.Log("Event processed successfully")    return nil}// processComponentAsync は、個別のコンポーネント処理を非同期で行う関数です。// 複雑性の要因：ゴルーチン内での処理、エラーハンドリング、状態更新の組み合わせfunc (cs *ComplexSystem) processComponentAsync(componentID string, event Event, resultChan chan<- ComponentResult) {    component, exists := cs.components[componentID]    if !exists {        resultChan <- ComponentResult{Error: fmt.Errorf("component not found: %s", componentID)}        return    }    newState, err := component.HandleEvent(event)    if err != nil {        resultChan <- ComponentResult{Error: cs.errorHandler.WrapError(err, "ComponentProcessingFailed")}        return    }    cs.stateManager.UpdateState(componentID, newState)    resultChan <- ComponentResult{ID: componentID, State: newState}}// performPostProcessing は、イベント処理後の追加処理を行う関数です。// 複雑性の要因：条件分岐、エラーハンドリング、外部サービス呼び出しの組み合わせfunc (cs *ComplexSystem) performPostProcessing(event Event) error {    // 複雑な条件分岐    switch event.Type {    case "TypeA":        // 外部サービス呼び出し        if err := cs.externalServiceA.Process(event); err != nil {            return cs.errorHandler.WrapError(err, "ExternalServiceAFailed")        }    case "TypeB":        // データ変換と検証        transformedData, err := cs.dataTransformer.Transform(event.Data)        if err != nil {            return cs.errorHandler.WrapError(err, "DataTransformationFailed")        }        if !cs.dataValidator.Validate(transformedData) {            return cs.errorHandler.NewError("InvalidTransformedData")        }        // さらなる処理...    default:        // デフォルトの複雑な処理ロジック        // ...    }    // メトリクス更新    cs.metrics.IncrementPostProcessingCounter(event.Type)    return nil}このコードは、多層の依存関係、複雑な状態管理、非同期イベント処理、動的設定、並行処理、多重エラーハンドリング、クロスカッティングコンサーンなどを含む極度に複雑なシステムを表現しており、その全体を理解し効果的に管理するには開発者の認知能力を大きく超える負荷が必要となります。この複雑性に対処するため、システムを小さな独立したサービスに分割し、各コンポーネントの責務を明確に定義することで、全体の理解と管理を容易にすることができます。以下は、そのアプローチを示す簡略化したサンプルです。// EventProcessor は、イベント処理の主要なインターフェースを定義します。type EventProcessor interface {    ProcessEvent(event Event) error}// SimpleEventProcessor は、EventProcessor の基本的な実装です。type SimpleEventProcessor struct {    logger     Logger    repository Repository    publisher  EventPublisher}// NewSimpleEventProcessor は、SimpleEventProcessor の新しいインスタンスを作成します。func NewSimpleEventProcessor(logger Logger, repository Repository, publisher EventPublisher) *SimpleEventProcessor {    return &SimpleEventProcessor{        logger:     logger,        repository: repository,        publisher:  publisher,    }}// ProcessEvent は、単一のイベントを処理します。func (p *SimpleEventProcessor) ProcessEvent(event Event) error {    p.logger.Info("Processing event", "id", event.ID, "type", event.Type)    if err := event.Validate(); err != nil {        return fmt.Errorf("invalid event: %w", err)    }    result, err := p.repository.Store(event)    if err != nil {        return fmt.Errorf("failed to store event: %w", err)    }    if err := p.publisher.Publish(result); err != nil {        p.logger.Error("Failed to publish result", "error", err)    }    p.logger.Info("Event processed successfully", "id", event.ID)    return nil}このアプローチにより、システムの複雑性が大幅に低減され、各コンポーネントの役割が明確になり、開発者の認知負荷が軽減されます。結果として、(組織や人によっては)コードの理解、保守、拡張が容易になり、長期的なシステムの健全性が向上します。複雑性のパラドックス興味深いことに、ソフトウェアの複雑性には一種のパラドックスのような構造が存在します。それはシステムを単純化しようとする試みが、かえって複雑性を増大させることがあるのです。例えば：抽象化の過剰：過度に抽象化されたシステムは、具体的な実装の理解を困難にする。過度な一般化：あらゆるケースに対応しようとすることで、システムが不必要に複雑になる。新技術の導入：複雑性を減らすために導入された新技術が、学習コストや統合の複雑さを増す。以下は、過度な抽象化の例です：type AbstractFactory interface {    CreateProduct() Product    ConfigureProduct(Product) error    ValidateProduct(Product) bool}type ConcreteFactory struct {    config     Config    validator  Validator    decorator  Decorator}func (f *ConcreteFactory) CreateProduct() Product {    // Complex creation logic    return nil}func (f *ConcreteFactory) ConfigureProduct(p Product) error {    // Complex configuration logic    return nil}func (f *ConcreteFactory) ValidateProduct(p Product) bool {    // Complex validation logic    return true}// Usagefunc UseFactory(factory AbstractFactory) {    product := factory.CreateProduct()    err := factory.ConfigureProduct(product)    if err != nil {        // Error handling    }    if !factory.ValidateProduct(product) {        // Validation failed    }    // Use the product}このコードは柔軟性を目指していますが、実際の使用時には理解と実装が困難になる可能性があります。このような複雑性のパラドックスに対処するには、適度な抽象化と具体的な実装のバランスを取ることが重要です。以下は、シンプルさと柔軟性のバランスを取った改善例です。type Product struct {    // Product fields}type ProductFactory struct {    config Config}func NewProductFactory(config Config) *ProductFactory {    return &ProductFactory{config: config}}func (f *ProductFactory) CreateProduct() (*Product, error) {    product := &Product{}    if err := f.configureProduct(product); err != nil {        return nil, fmt.Errorf("failed to configure product: %w", err)    }    if !f.validateProduct(product) {        return nil, errors.New("product validation failed")    }    return product, nil}func (f *ProductFactory) configureProduct(p *Product) error {    // Configuration logic    return nil}func (f *ProductFactory) validateProduct(p *Product) bool {    // Validation logic    return true}// Usagefunc UseFactory(factory *ProductFactory) {    product, err := factory.CreateProduct()    if err != nil {        // Error handling        return    }    // Use the product}この改善したコードは、単一責任の原則に基づいた ProductFactory の特化、一箇所でのエラーハンドリング、具体的な型の使用による理解のしやすさ、そして内部メソッドの非公開化によるカプセル化を特徴とし、これらの要素が複合的に作用することで、コードの複雑性を軽減しつつ必要な機能性を維持しています。このアプローチにより、コードの複雑性を減らしつつ、必要な柔軟性を維持することができます。適度な抽象化と具体的な実装のバランスを取ることで、(組織や人によっては)開発者の理解を促進し、長期的なメンテナンス性を向上させることができます。おわりにソフトウェアの複雑性は、諸刃の剣のようなものだと気づきました。それは私たちの能力を押し上げる原動力になる一方で、管理を怠れば混沌を招く危険性も秘めています。完全に複雑性を排除することは不可能かもしれません。しかし、それと向き合い、うまく付き合っていく術を見つけることは可能だと信じています。病気になってから健康に気を使い始めるのが辛いように、限界まで複雑化したソフトウェアをリファクタリングしていく作業も非常に困難です。そのため、早い段階から複雑性を管理する習慣を身につけることが重要です。ただし、この過程で過度に最適化やリファクタリングに固執すると、本来の目的を見失い、それ自体が目的化してしまう危険性があります。これは趣味が手段から目的にすり替わる現象に似ており、行き過ぎた最適化はまた別の問題を引き起こす可能性があります。Tidy First?: A Personal Exercise in Empirical Software Design (English Edition)作者:Beck, KentO'Reilly MediaAmazonしたがって、ビジネス側の要求や理想を実現するために、様々な手法やアプローチを積極的に検証していく姿勢も必要です。技術的な観点だけでなく、ビジネスゴールを常に意識し、両者のバランスを取りながら最適な解決策を模索することが、持続可能なソフトウェア開発につながります。過度な最適化や複雑性の管理に陥ることなく、ビジネス価値の創出と技術的な健全性のバランスを保つことが重要です。日々の開発の中で、継続的な管理プロセスの重要性を実感しています。適切なトレードオフを見極め、チーム内での知識共有や学習を大切にすること。これらは複雑性と付き合っていく上で欠かせない要素です。さらに、ビジネス部門との緊密なコミュニケーションを通じて、技術的な制約や可能性について相互理解を深めることも重要です。ツールやプラクティスは確かに助けになりますが、それらだけでは根本的な解決にはなりません。結局のところ、私たち人間の認知能力と技術の限界との絶え間ない闘いが続くのです。この挑戦に立ち向かい、バランスを取りながら進化し続けること。そして、ビジネスとテクノロジーの両面から問題にアプローチする柔軟性を持つことが、ソフトウェア開発者としての真の成長につながるのではないでしょうか。知らんけど…ソフトウェアファースト第２版　あらゆるビジネスを一変させる最強戦略作者:及川 卓也日経BPAmazon近年の大規模言語モデル（LLM）の急速な発展により、ソフトウェアの複雑性管理に新たな要素がもたらされつつあり、LLMが人間の認知能力を超える可能性が現実味を帯びてきている中、これはソフトウェア開発者にとってチャンスと挑戦の両面を意味します。例えばLLMが複雑なコードベースを瞬時に解析して最適化の提案を行ったり、人間には把握しきれない複雑な相互作用を予測して潜在的な問題を事前に指摘したりする可能性があります。github.com一方で、LLMの判断をどのように検証し、人間の意図や倫理的考慮をどのように組み込んでいくか、またLLMと人間の協働をどのように設計し、それぞれの強みを最大限に活かすかといった新たな課題に対する明確な解答や確立された手法はまだ見つかっていません。このような状況下で、エンジニアとして、LLMの進化とその影響について継続的かつ慎重に情報収集を行い、批判的に分析する姿勢が不可欠です。単に新技術を受け入れるのではなく、その長所と短所を十分に理解し、既存のソフトウェア開発プラクティスとの整合性を慎重に評価する必要があります。 speakerdeck.com今後はLLMの能力を活用しつつ、人間ならではの創造性や突っ込めないコンテキスト、直感、倫理的判断を組み合わせた新しいソフトウェア開発のアプローチを模索し、技術の進歩に適応しながらも人間中心の開発哲学を失わないバランスを取ることが求められるのではないでしょうか？。運用者目線でどうなのか？みたいなことを喋る機会があるので喋っていきたい。event2024.cloudopsdays.comみなさん、最後まで読んでくれて本当にありがとうございます。途中で挫折せずに付き合ってくれたことに感謝しています。読者になってくれたら更に感謝です。Xまでフォロワーしてくれたら泣いているかもしれません。]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[高度情報の午前Ⅱ試験を解くならこのサイト]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/24/225803</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/24/225803</guid>
            <pubDate>Sat, 24 Aug 2024 13:58:03 GMT</pubDate>
            <content:encoded><![CDATA[もうすぐ9月。秋の情報処理技術者試験も近づいてますね。私はプロジェクトマネージャ試験を受けるので頑張らねば。応用情報午前試験の過去問アプリはたくさんあるのですが、高度情報はないですよね。IPA公式の過去問をPDFで開かずとも、スマホで気軽に過去問演習したいところ。そこで、高度情報の午前Ⅱ試験を解くならこのサイトをご紹介したいと思います。情報処理技術者試験の勉強(過去問題)をやり直し過去問を1問1答形式で時進められます。全ての高度情報に対応しています。こちらを活用して、午前Ⅱは余裕で通過できるようにしておきましょう１]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[3-shake SRE Tech Talk #10無事終了。英語は大事w]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/23/231736</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/23/231736</guid>
            <pubDate>Fri, 23 Aug 2024 14:17:36 GMT</pubDate>
            <content:encoded><![CDATA[3-shake.connpass.comshu-kob.hateblo.jp初のオンサイト開催となる3-shake SRE Tech Talk #10無事終了しました。詳しいことは後日書くとして、私は誘導係をしました。会場となったGoogleさんの渋谷オフィスは渋谷ストリームという新しい建物にあるのですが、エントランスの長いエスカレータの下で誘導していたら外国人2組に道を聞かれました（笑）スリーシェイクTシャツ着て立っていたから、建物の係りの人と思われた？1人目の方には、スマホを見せられ、渋谷ストリーム内の串カツ屋の場所を聞かれました。飲食店マップがあったので、3Fか4Fにあるみたい、と拙い英語で説明w2組目の二人には、スマホを見せられ、半蔵門線渋谷駅の場所を聞かれました。エスカレータを指差し、「（エスカレータを）Down, Purple is Line Color.（半蔵門線のラインカラーは紫）」とまた拙い英語で説明したら、「ありがと！（Arigato）」とお礼を言われました。面白い経験をするとともに、Googleの音声翻訳など便利なものを使えばよかったと思いました。今後はもうちょっとまともな英語を答えられるよう頑張るぞ！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cilium L2 Announcement を使ってみる]]></title>
            <link>https://sreake.com/blog/learn-about-cilium-l2-announcement/</link>
            <guid>https://sreake.com/blog/learn-about-cilium-l2-announcement/</guid>
            <pubDate>Fri, 23 Aug 2024 01:10:11 GMT</pubDate>
            <content:encoded><![CDATA[はじめに Sreake事業部でインターンをしている小林です。 本記事では、Cilium v1.14で追加されたCilium L2 Announcementを検証しました。 Kubernetes External Load […]The post Cilium L2 Announcement を使ってみる first appeared on sreake.com | 株式会社スリーシェイク.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2024年8月23日(金)は渋谷とオンラインにて3-shake SRE Tech Talk #10]]></title>
            <link>https://shu-kob.hateblo.jp/entry/2024/08/22/214001</link>
            <guid>https://shu-kob.hateblo.jp/entry/2024/08/22/214001</guid>
            <pubDate>Thu, 22 Aug 2024 12:40:01 GMT</pubDate>
            <content:encoded><![CDATA[shu-kob.hateblo.jp以前も書きましたが、2024年8月23日(金)は渋谷とオンラインにて3-shake SRE Tech Talk #10 です。初のオンサイト開催！（オンラインも併用）18:30からGoogle Cloudさんの渋谷オフィスで行います。無料の懇親会もあります。オンサイトは定員40人のところ、前日の8月22日21:36現在、37人と、3人の空きがあります。タイムテーブルはこちら株式会社Topotal 菱田 健太氏「SRE NEXT 2024 で形にしたバトンを渡せる仕組み」株式会社スリーシェイク 阿部貴晶「LLMのO11yに触れる」グーグルクラウドジャパン合同会社 中谷 祐輔氏「スポンサーセッション」弊社スリーシェイクからは「LLMのO11yに触れる」というテーマで、生成AIのオブザーバビリティの話があります。私も会場誘導係として、参加予定です。生成AIに興味ある方もぜひご参加ください。]]></content:encoded>
        </item>
    </channel>
</rss>