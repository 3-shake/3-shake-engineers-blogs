{"pageProps":{"member":{"id":"akagawa","name":"Daisuke Akagawa","avatarSrc":"/avatars/akagawa.png","role":"Full Stack Engineer","bio":"Akasan","sources":["https://zenn.dev/akasan/feed","https://medium.com/feed/@daisuke1024akagawa"],"githubUsername":"Akasan","twitterUsername":"","websiteUrl":""},"postItems":[{"title":"モンティ・ホール問題をGoでも実装してみた。","link":"https://zenn.dev/akasan/articles/25ce5919322134","contentSnippet":"今回は、以前Pythonでモンティ・ホール問題を実装した記事を出したのですが、Goの勉強も兼ねて今回はGoでの実装を試してみました。モンティ・ホール問題って何？という方やPythonでの実装が気になる方はぜひこちらを参照ください。https://zenn.dev/akasan/articles/90b205bc9bca23 それでは早速実装していく プロジェクト初期化今回もこちらの記事のようにmiseを使ってプロジェクトを初期化していきます。https://zenn.dev/akasan/articles/7ef47bf9cd599bmise use go@1.24.3...","isoDate":"2025-05-20T11:58:52.000Z","dateMiliSeconds":1747742332000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Gonum Plotを使ってGoでプロットを作ってみる","link":"https://zenn.dev/akasan/articles/7ef47bf9cd599b","contentSnippet":"今回はGoでプロットグラフを作れるGonum Plotを使ってみようと思います。 Gonum Plotとは？Gonum Plotはcode.google.com/p/plotinumの新しい公式フォークとのことです。Goを利用してプロットのビルド・描画ができるAPIを提供しており、現時点ではまだ変動しており仕様が変更される可能性があるとのことです。詳しくは以下の公式ドキュメントを参照ください。https://pkg.go.dev/gonum.org/v1/plot#section-readme 実際に使ってみる インストールまず検証環境を作成します。今回はmiseを使っ...","isoDate":"2025-05-19T14:25:47.000Z","dateMiliSeconds":1747664747000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"miseを使い始めた","link":"https://zenn.dev/akasan/articles/2aa8031a03871c","contentSnippet":"今回はmiseを使い始めたので、インストール方法など自分の備忘録を兼ねてまとめてみようと思います。 miseとは？まず、miseとは何かというと、公式GitHubから拝借するとasdfのように、nodeやPython、cmakeやterraform、その他数百もの開発ツールを管理するdirenvのように、異なったプロジェクトディレクトリに関して環境変数を管理できるmakeのように、ビルドやプロジェクトのテストのためにタスクを管理できる要は開発環境を整えるツールなんだなという認識をしてます。最近ではPythonではuvなどが利用されていますが、そのような形でツールを簡単に...","isoDate":"2025-05-18T02:41:55.000Z","dateMiliSeconds":1747536115000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Google Cloud 認定資格奮闘記 ~Professional Data Engineer編~","link":"https://zenn.dev/akasan/articles/e2416e40a90499","contentSnippet":"この記事の続編になります。https://zenn.dev/akasan/articles/4d7972b7c5f84c Professional Data EngineerについてProfessional Data Engineer（以下、PDE）は、公式では以下のように説明されています。Professional Data Engineer は、データを収集、変換、公開することで、データを有効で価値のあるものにします。ビジネス要件と規制要件を満たすために、プロダクトやサービスを評価し、選択します。Professional Data Engineer は、堅牢なデータ処理シス...","isoDate":"2025-05-17T06:01:17.000Z","dateMiliSeconds":1747461677000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"LangflowとNotion連携について　〜コンテンツ生成編〜","link":"https://zenn.dev/akasan/articles/9acb1ed5fa3dc0","contentSnippet":"今回は、Langflowを利用して、Notionのページ内にコンテンツを生成させる方法についてまとめてみようと思います。Langflowの使い方については以前以下の記事で解説していますので併せてご覧ください。https://zenn.dev/akasan/articles/6357f1dd2b52ac 早速使ってみる 環境の立ち上げ今回も以前と同様に、公式が提供しているdockerを利用します。簡単な起動方法は以下になります。公式GitHubのレポジトリをcloneするdocker_exampleフォルダに移動するdocker compose upを実行する...","isoDate":"2025-05-16T13:30:15.000Z","dateMiliSeconds":1747402215000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"clickを使ってPythonのコマンドライン引数をきれいにしよう！","link":"https://zenn.dev/akasan/articles/034598cbd096e2","contentSnippet":"今回は、Pythonできれいなコマンドラインインターフェースを実装できるclickについて紹介してみようと思います。 clickとは？clickとはPythonできれいなコマンドラインインターフェースを実装するためのライブラリです。その名前はCommand Line Interface Creation Kitの頭文字をとったようです。レポジトリは以下になります。https://github.com/pallets/clickclickはコマンドラインツールを素早く実装できることに注力しており、従来のsysやargparseを利用したものと比べて格段に実装難易度が下がっていると...","isoDate":"2025-05-15T13:08:26.000Z","dateMiliSeconds":1747314506000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Apache Guacamoleとはなんなのか？","link":"https://zenn.dev/akasan/articles/6af98c0cd8fcff","contentSnippet":"今回は、Apache Guacamoleとは何かについて調べてみました。今回も以下のツールを使って対象プロジェクトを決めました！https://zenn.dev/akasan/articles/7e30ad266c02c4※ 本企画に関する記事の目的は、それぞれのプロジェクトを本格的に深ぼるのではなく、プロジェクト名⇆どんな内容かをパッと思い出せるようにすることを目指します！※ とはいえ深ぼってみたいプロジェクトがあればどんどん複数連載になると思います。 Apache Guacamoleとは？公式サイトを見ると、Apache Guacamole is a clientle...","isoDate":"2025-05-14T10:50:43.000Z","dateMiliSeconds":1747219843000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"curl使い方についてまとめてみた","link":"https://zenn.dev/akasan/articles/4248554eb4797b","contentSnippet":"今回はcurlの使い方について調べてみました。今までAPIのアクセステストとかに使っていましたが、ちゃんと調べたことなかったので、この際調べてみようということで記事にしました。 curlとは？ドキュメントから拝借すると、curl is used in command lines or scripts to transfer data. curl is also libcurl, used in cars, television sets, routers, printers, audio equipment, mobile phones, tablets, medical de...","isoDate":"2025-05-13T11:37:37.000Z","dateMiliSeconds":1747136257000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"ランレングス符号化をPythonで実装してみた","link":"https://zenn.dev/akasan/articles/9430f41e6cff7a","contentSnippet":"今回は、ランレングス符号化をPythonで実装してみたので、その解説をしてみようと思いまs。 ランレングス符号化とは？ランレングス符号化とはデータ圧縮方式の一つで、連続する同じデータをまとめて扱うことで圧縮をするというものです。たとえばAABBBCCCCというテキストがあった場合に、各文字とそれがいくつ連続しているかという情報に変換してみます。するとA2B3C4のように変換でき、元のテキストの長さ9文字と比較して6文字に収めることができます。ただし、ランレングス符号化では必ず圧縮後のデータ量が小さくなる保証はありません。たとえばABCDEF....XYZのようにアルファベットが...","isoDate":"2025-05-12T14:35:35.000Z","dateMiliSeconds":1747060535000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Python 3.13の新機能について調べてみた","link":"https://zenn.dev/akasan/articles/423451d2bb8249","contentSnippet":"今回は、Python3.13で導入される新機能についてまとめてみました。私自身、普段は3.11または3.12を使うことが多く、3.13についてはどのような機能が追加されるか認識していなかったので調べてみました。 追加される新機能まず、Python3.13で導入される新機能はこちらにまとまっていますので、詳しくは参照ください。https://docs.python.org/3/whatsnew/3.13.html#other-language-changes よりよいインタラクティブインタプリタPyPyプロジェクトのコードをベースとした新しいインタラクティブシェルをデフォルト...","isoDate":"2025-05-11T14:23:08.000Z","dateMiliSeconds":1746973388000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Apache Compress Ant Libraryとはなんなのか？","link":"https://zenn.dev/akasan/articles/ba9cf85b99b68f","contentSnippet":"今回は、Apache Compress Ant Libraryとは何かについて調べてみました。なぜ調べてみようかと思ったかというと、こちらで作成したツールを使う第一号をやってみたかったからです。https://zenn.dev/akasan/articles/7e30ad266c02c4※ 本企画に関する記事の目的は、それぞれのプロジェクトを本格的に深ぼるのではなく、プロジェクト名⇆どんな内容かをパッと思い出せるようにすることを目指します！※ とはいえ深ぼってみたいプロジェクトがあればどんどん複数連載になると思います。 Apache Compress Ant Libraryとは...","isoDate":"2025-05-10T14:08:12.000Z","dateMiliSeconds":1746886092000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Apache Projects様を引用してブログネタを決めるためのツールを作成しました","link":"https://zenn.dev/akasan/articles/7e30ad266c02c4","contentSnippet":"今回は、私が今しているセルフエンドレスアドベントカレンダーのネタを決めるためのツールを作成しましたので紹介します。 対象とするものは？今回はApacheのプロジェクト一覧からランダムに抽出されたプロジェクトを対象とするようにしました。なお、これはネタが思い浮かばなかったり、思い浮かんでるけどなんか違うものがいいなと思った時に実行するようにします。https://projects.apache.org/projects.html 作成したツールについて今回はPythonを使ってツールを作成しました。まずは先ほどのApache Projectsの一覧からアイテムをテキストファ...","isoDate":"2025-05-09T13:35:49.000Z","dateMiliSeconds":1746797749000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"pyarmorを使ってPythonコードを難読化してみた","link":"https://zenn.dev/akasan/articles/bd61954c87d4ea","contentSnippet":"今回は、pyarmorを利用してPythonのコードを難読化してみようと思います。 pyarmorとは？pyarmorとはPythonコードの難読化をするためのツールとなります。コマンドラインツールであり、難読化を初めコードの利用期限の設定などもできるものとなっております。主な特徴としてはいかがあるようです。難読化されたコードもPythonファイルであり、オリジナルのコードと置換するだけでシームレスに置き換えできますセキュリティとパフォーマンスのバランスが取れるように複数の難読化手法を提供関数名やクラス、変数などがリネームされ、復元できない難読化が実行されるいくつかのPy...","isoDate":"2025-05-08T11:15:03.000Z","dateMiliSeconds":1746702903000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"入社エントリ：スリーシェイクに入社して5ヶ月目に突入！！","link":"https://zenn.dev/akasan/articles/c9152e75975b51","contentSnippet":"私の経歴まずは簡単に私の経歴についてまとめてみます某技術系の学校にて電気電子系を専攻新卒でロボットやAIの重荷受託開発企業に入社最初はロボットの制御ソフトウェアとかを結構作ってましたが、コロナ禍になってからは完全にソフトウェアにシフト入社後から主に画像処理や業務効率化ソフトウェアの開発に従事2021年11月に2社目となる会社に転職その会社ではがっつりAI開発系の会社で、動画像を対象とした異常検知モデルを主に開発後半からはそのモデルを動かすためのWebアプリケーションのフロントエンド以外（バックエンド実装、CI/CD実装など）全般を担当2025年1月から...","isoDate":"2025-05-07T13:42:12.000Z","dateMiliSeconds":1746625332000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"自分が課金しているサービス挙げてみた","link":"https://zenn.dev/akasan/articles/f46eda0ba43958","contentSnippet":"今回は、自分がエンジニアリングに関して課金しているツールを挙げてみました。この記事の作成意図としては、「私これだけ課金して普段やってるんだぜ」という自慢ではなく、「こういうサービスを使って生産性あげたり情報収集してるんだ」ということを共有したいだけです。なお、課金してるけど全然使えてないツールもあるので、ちゃんと整理しないといけないなというのもあり、この記事を書いている部分もあります。 SlackSlackでは私個人として使っているものがあり、過去のメッセージも全て残したいのでproプランを使っています。記事作成時点では月払いにしていて¥1,050/月の支払いとなっています。使い...","isoDate":"2025-05-06T11:06:13.000Z","dateMiliSeconds":1746529573000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Cloud StorageへのファイルアップロードをPub/Subで受け取る","link":"https://zenn.dev/akasan/articles/e17a1867408c53","contentSnippet":"今回はCloud StorageにファイルがアップロードされたときにPub/Subdで受け取る方法についてまとめてみます。 システム構成今回の検証の環境はざっくり以下になります。Cloud Storageではファイルアップロードを受け付けますCloud Storageにファイルがアップロードされると、Pub/Subトピックに向けて通知が投げられますPub/Subが通知を受け取るとBigQueryに対して通知を配信しますBigQueryではテーブルにPub/Subから受け取った通知を蓄積します 実装 Cloud StorageまずはCloud Storageの...","isoDate":"2025-05-05T13:31:49.000Z","dateMiliSeconds":1746451909000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Taskfile使ってみた","link":"https://zenn.dev/akasan/articles/f4a13b2e62a637","contentSnippet":"仕事でチームメンバーがTaskfileというものがあるということを共有していて、どんなものか知らなかったので、今回は入門してみようと思います。 Taskfileとは？公式ドキュメントによると、TaskfileとはGNU Makeなどと比較してシンプルであり使いやすさを求めたタスクランナーおよびビルドツールということです。Goで書かれているためバイナリとして利用でき、インストールに他の依存するソフトなどを入れることなく使えることがいいということです。また、特徴として以下があるようです。上述のようにバイナリをダウンロードするだけでよく、$PATHに追加するだけでいいのでインストー...","isoDate":"2025-05-04T12:02:23.000Z","dateMiliSeconds":1746360143000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Pythonを使ったチュートリアルを通してDataflow試してみた","link":"https://zenn.dev/akasan/articles/e3d25446d34776","contentSnippet":"今回は、昨日実施したDataflowチュートリアルの続編となります。前回はDataflowのテンプレートを利用したパイプラインの動作チェックでしたが、今回はPython SDKを利用したチュートリアルを実施してみます。前回の記事はこちらですので、ぜひご参照ください。https://zenn.dev/akasan/articles/a0ebe0ae2ed2ec 早速チュートリアルを試してみる チュートリアル概要今回は、DataflowをPythonから利用するチュートリアルを利用してみます。チュートリアルの概要は以下のようです。本記事は前回の記事の続編という立て付けでいこうと思...","isoDate":"2025-05-03T14:03:21.000Z","dateMiliSeconds":1746281001000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"チュートリアルを通してDataflow試してみた","link":"https://zenn.dev/akasan/articles/a0ebe0ae2ed2ec","contentSnippet":"今回は、Dataflowをチュートリアルを通して実際に使ってみました。 そもそもDataflowとは？Dataflowとは、公式の説明を引用させてもらうと、Dataflow は、統合されたストリーム データ処理とバッチデータ処理を大規模に提供するサービスです。 Google Cloud Dataflow を使用して、1 つ以上のソースからデータを読み取り、変換し、宛先に書き込むデータ パイプラインを作成します。Dataflow の一般的なユースケースは次のとおりです。データの移動: データの取り込みやサブシステム間でのデータの複製BigQuery などのデータ ウェアハウ...","isoDate":"2025-05-02T13:24:14.000Z","dateMiliSeconds":1746192254000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"今更ながらghコマンド入門してみた","link":"https://zenn.dev/akasan/articles/08baf7b0ee96ec","contentSnippet":"今回はGitHubをCLIから扱うことができるghコマンドについて入門してみましたので、自分の備忘録もかねてコマンドとかまとめてみようと思います。 ghとは？公式ドキュメントを引用すると、GitHub CLI は、コンピューターのコマンド ラインから GitHub を使用するためのオープン ソース ツールです。 コマンドラインから作業しているときは、GitHub CLI を使用して時間を節約し、コンテキストの切り替えを回避できます。GitHub CLI には、次のような GitHub 機能が含まれています。リポジトリの表示、作成、複製、フォークIssue と pull r...","isoDate":"2025-05-01T12:56:56.000Z","dateMiliSeconds":1746104216000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"The Diary of fighting with COVID-19? Day-4","link":"https://daisuke1024akagawa.medium.com/the-diary-of-fighting-with-covid-19-day-4-dd2561d21338?source=rss-c54ac439ad2b------2","isoDate":"2023-01-14T11:25:46.000Z","dateMiliSeconds":1673695546000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"The Diary of fighting with COVID-19? Day-3","link":"https://daisuke1024akagawa.medium.com/the-diary-of-fighting-with-covid-19-day-3-fa8a830320d3?source=rss-c54ac439ad2b------2","isoDate":"2023-01-13T13:21:39.000Z","dateMiliSeconds":1673616099000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"The Diary of fighting with COVID-19? Day-2","link":"https://daisuke1024akagawa.medium.com/the-diary-of-fighting-with-covid-19-day-2-59fc403b0fea?source=rss-c54ac439ad2b------2","isoDate":"2023-01-12T13:20:43.000Z","dateMiliSeconds":1673529643000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"The Diary of fighting with COVID-19? Day-1","link":"https://daisuke1024akagawa.medium.com/the-diary-of-fighting-with-covid-19-day-1-3abeaf7e9399?source=rss-c54ac439ad2b------2","isoDate":"2023-01-11T13:35:26.000Z","dateMiliSeconds":1673444126000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Python Experiment: For VS Comprehension 1","link":"https://daisuke1024akagawa.medium.com/python-experiment-for-vs-comprehension-1-28868928fe8d?source=rss-c54ac439ad2b------2","isoDate":"2022-05-26T14:21:48.000Z","dateMiliSeconds":1653574908000,"authorName":"Daisuke Akagawa","authorId":"akagawa"},{"title":"Isn’t it troublesome to set the log file in python? Use LoggerGenerator","link":"https://daisuke1024akagawa.medium.com/isnt-it-troublesome-to-set-the-log-file-in-python-use-loggergenerator-8e6483843bd3?source=rss-c54ac439ad2b------2","isoDate":"2021-06-30T06:06:24.000Z","dateMiliSeconds":1625033184000,"authorName":"Daisuke Akagawa","authorId":"akagawa"}]},"__N_SSG":true}